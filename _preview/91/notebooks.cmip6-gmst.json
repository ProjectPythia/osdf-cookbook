{"version":2,"kind":"Notebook","sha256":"769647d6eebcaf6a29fac69f222c26f9b4500a0ab1fc69a553c393cc31fb3d80","slug":"notebooks.cmip6-gmst","location":"/notebooks/02_cmip6_gmst.ipynb","dependencies":[],"frontmatter":{"title":"Global Mean Surface Temperature Anomalies (GMSTA) from CMIP6 data","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Harsha R. Hampapura","given":"Harsha R.","family":"Hampapura"},"name":"Harsha R. Hampapura","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Brian Bockelman","given":"Brian","family":"Bockelman"},"name":"Brian Bockelman","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Alexander Hoelzeman","given":"Alexander","family":"Hoelzeman"},"name":"Alexander Hoelzeman","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Carrie Wall","given":"Carrie","family":"Wall"},"name":"Carrie Wall","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Emma Turetsky","given":"Emma","family":"Turetsky"},"name":"Emma Turetsky","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Amandha Wingert Barok","given":"Amandha Wingert","family":"Barok"},"name":"Amandha Wingert Barok","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Aashish Panta","given":"Aashish","family":"Panta"},"name":"Aashish Panta","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Riley Conroy","given":"Riley","family":"Conroy"},"name":"Riley Conroy","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Douglas Schuster","given":"Douglas","family":"Schuster"},"name":"Douglas Schuster","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Justin Hiemstra","given":"Justin","family":"Hiemstra"},"name":"Justin Hiemstra","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Joanmarie Del Vecchio","given":"Joanmarie Del","family":"Vecchio"},"name":"Joanmarie Del Vecchio","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Kibiwott Koech","given":"Kibiwott","family":"Koech"},"name":"Kibiwott Koech","id":"contributors-myst-generated-uid-11"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/osdf-cookbook","copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"source_url":"https://github.com/projectpythia/osdf-cookbook/blob/HEAD/notebooks/02_cmip6_gmst.ipynb","edit_url":"https://github.com/projectpythia/osdf-cookbook/edit/HEAD/notebooks/02_cmip6_gmst.ipynb","exports":[{"format":"ipynb","filename":"02_cmip6_gmst.ipynb","url":"/osdf-cookbook/_preview/91/build/02_cmip6_gmst-5abefc237245fc6512b68f952399fb5c.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cG3pUU6j3q"}],"key":"jflctFEFVY"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JmMSoxqP7e"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"ha2XMYz8Kv"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In this notebook we will compute the Global Mean Surface Temperature Anomalies (GMSTA) from CMIP6 data and compare it with observations. This notebook is heavily inspired by the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"y5bTy6bPFK"},{"type":"link","url":"https://projectpythia.org/cmip6-cookbook/notebooks/example-workflows/gmst/","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"GMST example","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vzAGTOIc3p"}],"urlSource":"https://projectpythia.org/cmip6-cookbook/notebooks/example-workflows/gmst/","key":"ZMFcoxnXYT"},{"type":"text","value":" in the CMIP6 cookbook and we thank the authors for their workflow.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ZCgoUr3Fx9"}],"key":"IF3iWymS4J"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We will get the CMIP6 temperature data from the AWS open data program via the us-west-2 origin","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"HNdIktUdwc"}],"key":"bHE61FxSMB"}],"key":"sEfbheBHZV"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"In order to do this, we will use an intake-ESM catalog (hosted on NCAR’s RDA) that uses pelicanFS backed links instead of https or s3 links","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gpqBIXcIkt"}],"key":"zPk3onZstE"}],"key":"lh96BoER42"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We will grab observational data hosted on NCAR’s RDA, which is accessible via the NCAR origin","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"QOnAdG9U4F"}],"key":"DoLftmnx3t"}],"key":"uRMj8mYnlq"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Please refer to the first chapter of this cookbook to learn more about OSDF, pelican or pelicanFS","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"dmDrwj8QBV"}],"key":"WDK4Jx1BoK"}],"key":"aoWkDLNjDe"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"This notebook demonstrates that you can seamlessly stream data from multiple OSDF origins in your workflow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"nCkW3Ff7pN"}],"key":"tUkWRG5YEN"}],"key":"pvECDktJmK"}],"key":"Pbal9rQGd4"}],"key":"yKocCI4LOI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VaWhxHvloo"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"KnVwCaNcIw"},{"type":"table","position":{"start":{"line":2,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ctA48pbzJn"}],"key":"BezJ3fcP15"},{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qjHXUdLiQx"}],"key":"fMIEaUQ1Lp"},{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mUbjJUAkk0"}],"key":"BRAiMSq1kL"}],"key":"GEpGG918o1"},{"type":"tableRow","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Intro to Intake-ESM","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"RM0nfRfMKN"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy","key":"tEJ25fKZia"}],"key":"cwt841JyWt"},{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"FWnZBD2RU8"}],"key":"bBTYZlNm7M"},{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Used for searching CMIP6 data","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"VX1g02fPQC"}],"key":"gnnmr74QC9"}],"key":"vWk2q1dJXw"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://zarr.dev/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Understanding of Zarr","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"LlHV66yfGf"}],"urlSource":"https://zarr.dev/","key":"fYEn70Vtga"}],"key":"vRO0DYC1Hz"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Dllg4cJN3C"}],"key":"w8IozOIyBJ"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Familiarity with metadata structure","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eiCmi8jCPR"}],"key":"TleOWdVAkP"}],"key":"vahDk3rv98"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://seaborn.pydata.org/","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Seaborn","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"LDHGNW3jvV"}],"urlSource":"https://seaborn.pydata.org/","key":"tF5P3z0CPY"}],"key":"pjgwJqKAub"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"i9Z7Tjh9q5"}],"key":"JgDfwYORJs"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Used for plotting","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"EDoGGjRshH"}],"key":"Wnjz76zbCg"}],"key":"RZlbRQ6m5Z"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/osdf-cookbook/notebooks/pelicanfs/","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"PelicanFS","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"OKPcyza6AH"}],"urlSource":"https://projectpythia.org/osdf-cookbook/notebooks/pelicanfs/","key":"GRdwsz75Zd"}],"key":"OyWyRogsP8"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"zSLKXHus6W"}],"key":"tKn02fhkBN"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The python package used to stream data in this notebook","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"OrxV6lV9VV"}],"key":"dl5Xp2AF6H"}],"key":"vPr4GyX43o"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"OSDF","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"rRLEh5JKcj"}],"key":"Yv8jbGmtjx"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"dhgjYpHmSh"}],"key":"MtuWadohlm"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"OSDF is used to stream data in this notebook","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"fZ6MZzEx1F"}],"key":"PRptVpuXb0"}],"key":"JwLHGlhXrZ"}],"key":"KIM5cEXk0l"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"jfTYteUKYm"}],"key":"PEH9AWdsIG"},{"type":"text","value":": 20 mins","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"bLYz2O8wv5"}],"key":"hRtaZUwwlY"}],"key":"n5MGaqV1iu"}],"key":"Qlx5fvfBrO"}],"key":"a5MMjSLLTZ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b8pAKw8YkC"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"H0JnB9TDe6"}],"key":"XcxqGPGx7G"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from matplotlib import pyplot as plt\nimport xarray as xr\nimport numpy as np\nfrom dask.diagnostics import progress\nfrom tqdm.autonotebook import tqdm\nimport intake\nimport fsspec\nimport seaborn as sns\nimport aiohttp\nimport dask\nfrom dask.distributed import LocalCluster\nimport pelicanfs ","key":"F2g4bYSyC5"},{"type":"output","id":"KavCHzIiv9-NMJHemzJs2","data":[{"output_type":"stream","name":"stderr","text":"/tmp/ipykernel_4085/2849986847.py:5: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from tqdm.autonotebook import tqdm\n"}],"key":"OH3UX05XaC"}],"key":"mcyB5FoEmV"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We will use an intake-ESM catalog hosted on NCAR’s Research Data Archive. This is nothing but the AWS cmip6 catalog modified to use OSDF","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DLz1HKmDj4"}],"key":"ladWz56rAJ"}],"key":"SFvqM0WERt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Load catalog URL\nrda_url     =  'https://data.rda.ucar.edu/'\ncat_url     = rda_url +  'd850001/catalogs/osdf/cmip6-aws/cmip6-osdf-zarr.json'\nprint(cat_url)","key":"JbkVBcRyfY"},{"type":"output","id":"_vctQhWm15Q3O6WmhzHPR","data":[{"output_type":"stream","name":"stdout","text":"https://data.rda.ucar.edu/d850001/catalogs/osdf/cmip6-aws/cmip6-osdf-zarr.json\n"}],"key":"V1DP9BRxRV"}],"key":"EgbLjVhegW"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Set up local dask cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u25n8NGWfp"}],"identifier":"set-up-local-dask-cluster","label":"Set up local dask cluster","html_id":"set-up-local-dask-cluster","implicit":true,"key":"pBnvsRz4yw"}],"key":"IDdw1NnMH0"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Before we do any computation let us first set up a local cluster using dask","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xZEd34tlpd"}],"key":"JjWbEBK7v0"}],"key":"uw6Mov9rZu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"cluster = LocalCluster()          \nclient = cluster.get_client()","key":"yhLn5kyi7h"},{"type":"output","id":"IFHqtRLSbPUQHZOt5k39r","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/distributed/node.py:187: UserWarning: Port 8787 is already in use.\nPerhaps you already have a cluster running?\nHosting the HTTP server on port 44623 instead\n  warnings.warn(\n"}],"key":"hbtyp9dsB3"}],"key":"WVOK4wDx2s"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Scale the cluster\nn_workers = 5\ncluster.scale(n_workers)\ncluster","key":"txkA17DGmp"},{"type":"output","id":"yfrC-dSepHItDlpKFqZqk","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"LocalCluster(dfdff63c, 'tcp://127.0.0.1:43945', workers=4, threads=4, memory=15.62 GiB)","content_type":"text/plain"},"text/html":{"content":"<div class=\"jp-RenderedHTMLCommon jp-RenderedHTML jp-mod-trusted jp-OutputArea-output\">\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\">\n    </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px; margin-top: 0px;\">LocalCluster</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">dfdff63c</p>\n        <table style=\"width: 100%; text-align: left;\">\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:44623/status\" target=\"_blank\">http://127.0.0.1:44623/status</a>\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Workers:</strong> 4\n                </td>\n            </tr>\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Total threads:</strong> 4\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Total memory:</strong> 15.62 GiB\n                </td>\n            </tr>\n            \n            <tr>\n    <td style=\"text-align: left;\"><strong>Status:</strong> running</td>\n    <td style=\"text-align: left;\"><strong>Using processes:</strong> True</td>\n</tr>\n\n            \n        </table>\n\n        <details>\n            <summary style=\"margin-bottom: 20px;\">\n                <h3 style=\"display: inline;\">Scheduler Info</h3>\n            </summary>\n\n            <div style=\"\">\n    <div>\n        <div style=\"width: 24px; height: 24px; background-color: #FFF7E5; border: 3px solid #FF6132; border-radius: 5px; position: absolute;\"> </div>\n        <div style=\"margin-left: 48px;\">\n            <h3 style=\"margin-bottom: 0px;\">Scheduler</h3>\n            <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Scheduler-f4f7c17e-48f7-45e8-978f-d3900f377b83</p>\n            <table style=\"width: 100%; text-align: left;\">\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Comm:</strong> tcp://127.0.0.1:43945\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Workers:</strong> 0 \n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:44623/status\" target=\"_blank\">http://127.0.0.1:44623/status</a>\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total threads:</strong> 0\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Started:</strong> Just now\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total memory:</strong> 0 B\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <details style=\"margin-left: 48px;\">\n        <summary style=\"margin-bottom: 20px;\">\n            <h3 style=\"display: inline;\">Workers</h3>\n        </summary>\n\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 0</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:36995\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:43477/status\" target=\"_blank\">http://127.0.0.1:43477/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:44813\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-6xkj9m5i\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 1</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:46245\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:35961/status\" target=\"_blank\">http://127.0.0.1:35961/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:45343\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-1y6qy0wc\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 2</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:41291\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:41549/status\" target=\"_blank\">http://127.0.0.1:41549/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:40237\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-1ebm3550\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 3</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:32991\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:38851/status\" target=\"_blank\">http://127.0.0.1:38851/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:45143\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-8wzg8sj1\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n\n    </details>\n</div>\n\n        </details>\n    </div>\n</div>","content_type":"text/html"}}}],"key":"O24AOHDAzm"}],"key":"MELuXrmsYY"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Data Loading","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TZyIjrBEZC"}],"identifier":"data-loading","label":"Data Loading","html_id":"data-loading","implicit":true,"key":"IwXTpWp0VR"},{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Load CMIP6 data from AWS","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"DGiqKuIKv1"}],"identifier":"load-cmip6-data-from-aws","label":"Load CMIP6 data from AWS","html_id":"load-cmip6-data-from-aws","implicit":true,"key":"AmGVGXtJxB"}],"key":"zlhIv6MLwa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"col = intake.open_esm_datastore(cat_url)\ncol","key":"Q8h0fH1PMd"},{"type":"output","id":"PI0swKyHJK7Kg5JUJ-TmN","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/intake_esm/__init__.py:6: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.\n  from pkg_resources import DistributionNotFound, get_distribution\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"<p><strong>pangeo-cmip6 catalog with 7780 dataset(s) from 522217 asset(s)</strong>:</p> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unique</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>activity_id</th>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>institution_id</th>\n      <td>36</td>\n    </tr>\n    <tr>\n      <th>source_id</th>\n      <td>88</td>\n    </tr>\n    <tr>\n      <th>experiment_id</th>\n      <td>170</td>\n    </tr>\n    <tr>\n      <th>member_id</th>\n      <td>657</td>\n    </tr>\n    <tr>\n      <th>table_id</th>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>variable_id</th>\n      <td>709</td>\n    </tr>\n    <tr>\n      <th>grid_label</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>zstore</th>\n      <td>522217</td>\n    </tr>\n    <tr>\n      <th>dcpp_init_year</th>\n      <td>60</td>\n    </tr>\n    <tr>\n      <th>version</th>\n      <td>744</td>\n    </tr>\n    <tr>\n      <th>derived_variable_id</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"Mb8UAle5DT"}],"key":"kTpzTwGHRA"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# there is currently a significant amount of data for these runs\nexpts = ['historical', 'ssp245', 'ssp370']\n\nquery = dict(\n    experiment_id=expts,\n    table_id='Amon',\n    variable_id=['tas'],\n    member_id = 'r1i1p1f1',\n    #activity_id = 'CMIP',\n)\n\ncol_subset = col.search(require_all_on=[\"source_id\"], **query)\ncol_subset","key":"jea5T0kLRd"},{"type":"output","id":"kym0VEvR1vonvTT-ACLco","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"<p><strong>pangeo-cmip6 catalog with 81 dataset(s) from 81 asset(s)</strong>:</p> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unique</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>activity_id</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>institution_id</th>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>source_id</th>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>experiment_id</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>member_id</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>table_id</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>variable_id</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>grid_label</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>zstore</th>\n      <td>81</td>\n    </tr>\n    <tr>\n      <th>dcpp_init_year</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>version</th>\n      <td>46</td>\n    </tr>\n    <tr>\n      <th>derived_variable_id</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"YRplnp0Jih"}],"key":"KDm3RLD5pE"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Let us inspect the zarr store paths to see if we are using the pelican protocol.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BUYx5me09L"}],"key":"auz0TuwODb"}],"key":"l7QVIhSf62"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We see that zstore column has paths that start with ‘osdf:///’ instead of ‘https://’ which tells us that we are not using a simple ‘https’ GET request to fetch the data.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"bvvm5OCkpv"}],"key":"DCNbh7ZRQY"}],"key":"azua45zOOD"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"In order to know more about the pelican protocol, please refer to the first chapter of this cookbook.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gG8ekqopca"}],"key":"wnTMMwvqbv"}],"key":"d7RcuagSEk"}],"key":"Nb79gIZoiQ"}],"key":"Ag6M7NjFgF"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"col_subset.df","key":"vdp1ceVj9H"},{"type":"output","id":"GpP-iZJxiZBTzr5tUzNSZ","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"    activity_id institution_id      source_id experiment_id member_id  \\\n0          CMIP   CSIRO-ARCCSS     ACCESS-CM2    historical  r1i1p1f1   \n1   ScenarioMIP   CSIRO-ARCCSS     ACCESS-CM2        ssp245  r1i1p1f1   \n2   ScenarioMIP   CSIRO-ARCCSS     ACCESS-CM2        ssp370  r1i1p1f1   \n3   ScenarioMIP            AWI  AWI-CM-1-1-MR        ssp245  r1i1p1f1   \n4   ScenarioMIP            AWI  AWI-CM-1-1-MR        ssp370  r1i1p1f1   \n..          ...            ...            ...           ...       ...   \n76  ScenarioMIP            NCC     NorESM2-MM        ssp370  r1i1p1f1   \n77  ScenarioMIP            NCC     NorESM2-MM        ssp245  r1i1p1f1   \n78         CMIP        AS-RCEC        TaiESM1    historical  r1i1p1f1   \n79  ScenarioMIP        AS-RCEC        TaiESM1        ssp370  r1i1p1f1   \n80  ScenarioMIP        AS-RCEC        TaiESM1        ssp245  r1i1p1f1   \n\n   table_id variable_id grid_label  \\\n0      Amon         tas         gn   \n1      Amon         tas         gn   \n2      Amon         tas         gn   \n3      Amon         tas         gn   \n4      Amon         tas         gn   \n..      ...         ...        ...   \n76     Amon         tas         gn   \n77     Amon         tas         gn   \n78     Amon         tas         gn   \n79     Amon         tas         gn   \n80     Amon         tas         gn   \n\n                                               zstore  dcpp_init_year  \\\n0   osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n1   osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n2   osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n3   osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n4   osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n..                                                ...             ...   \n76  osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n77  osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n78  osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n79  osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n80  osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n\n     version  \n0   20191108  \n1   20191108  \n2   20191108  \n3   20190529  \n4   20190529  \n..       ...  \n76  20191108  \n77  20191108  \n78  20200623  \n79  20201014  \n80  20201124  \n\n[81 rows x 11 columns]","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>activity_id</th>\n      <th>institution_id</th>\n      <th>source_id</th>\n      <th>experiment_id</th>\n      <th>member_id</th>\n      <th>table_id</th>\n      <th>variable_id</th>\n      <th>grid_label</th>\n      <th>zstore</th>\n      <th>dcpp_init_year</th>\n      <th>version</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CMIP</td>\n      <td>CSIRO-ARCCSS</td>\n      <td>ACCESS-CM2</td>\n      <td>historical</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20191108</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ScenarioMIP</td>\n      <td>CSIRO-ARCCSS</td>\n      <td>ACCESS-CM2</td>\n      <td>ssp245</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20191108</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ScenarioMIP</td>\n      <td>CSIRO-ARCCSS</td>\n      <td>ACCESS-CM2</td>\n      <td>ssp370</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20191108</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ScenarioMIP</td>\n      <td>AWI</td>\n      <td>AWI-CM-1-1-MR</td>\n      <td>ssp245</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20190529</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ScenarioMIP</td>\n      <td>AWI</td>\n      <td>AWI-CM-1-1-MR</td>\n      <td>ssp370</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20190529</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>ScenarioMIP</td>\n      <td>NCC</td>\n      <td>NorESM2-MM</td>\n      <td>ssp370</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20191108</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>ScenarioMIP</td>\n      <td>NCC</td>\n      <td>NorESM2-MM</td>\n      <td>ssp245</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20191108</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>CMIP</td>\n      <td>AS-RCEC</td>\n      <td>TaiESM1</td>\n      <td>historical</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20200623</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>ScenarioMIP</td>\n      <td>AS-RCEC</td>\n      <td>TaiESM1</td>\n      <td>ssp370</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20201014</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>ScenarioMIP</td>\n      <td>AS-RCEC</td>\n      <td>TaiESM1</td>\n      <td>ssp245</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20201124</td>\n    </tr>\n  </tbody>\n</table>\n<p>81 rows × 11 columns</p>\n</div>","content_type":"text/html"}}}],"key":"LzCFeJI3vE"}],"key":"c76l4qbReg"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Grab some Observational time series data for comparison with ensemble spread","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hEusmJpAiW"}],"identifier":"grab-some-observational-time-series-data-for-comparison-with-ensemble-spread","label":"Grab some Observational time series data for comparison with ensemble spread","html_id":"grab-some-observational-time-series-data-for-comparison-with-ensemble-spread","implicit":true,"key":"uVuAeRf8bi"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"The observational data we will use is the HadCRUT5 dataset from the UK Met Office","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"yE9Lq6cuQu"}],"key":"pRkQnvADpQ"}],"key":"p21uRyVgun"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"The data has been downloaded to NCAR’s Research Data Archive (RDA) from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AaGaPgXDwa"},{"type":"link","url":"https://www.metoffice.gov.uk/hadobs/hadcrut5/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"https://​www​.metoffice​.gov​.uk​/hadobs​/hadcrut5/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oQV5IZm5Et"}],"urlSource":"https://www.metoffice.gov.uk/hadobs/hadcrut5/","key":"sewNvNaSRv"}],"key":"Wdqb2BkrG5"}],"key":"r3zba7YtRh"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We will use an OSDF to access this copy from the RDA. Again the links will start with ‘osdf:///’","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"f3rPZW4WpK"}],"key":"y0ssGdHnBB"}],"key":"EbbOPoE8pE"}],"key":"mTk5Zze38p"}],"key":"oDgLSnbm1o"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nobs_url    = 'osdf:///ncar/rda/d850001/HadCRUT.5.0.2.0.analysis.summary_series.global.monthly.nc'\n#\nobs_ds = xr.open_dataset(obs_url, engine='h5netcdf').tas_mean\nobs_ds","key":"VRTIcMoJGy"},{"type":"output","id":"-qo0ndfd_ce0nHyhLjeGf","data":[{"output_type":"stream","name":"stderr","text":"No working cache found\n"},{"output_type":"stream","name":"stdout","text":"CPU times: user 1.34 s, sys: 126 ms, total: 1.46 s\nWall time: 1.55 s\n"},{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mNoAvailableSource\u001b[39m                         Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[8]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[43mget_ipython\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m.\u001b[49m\u001b[43mrun_cell_magic\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mtime\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mobs_url    = \u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mosdf:///ncar/rda/d850001/HadCRUT.5.0.2.0.analysis.summary_series.global.monthly.nc\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[38;5;130;43;01m\\n\u001b[39;49;00m\u001b[33;43m#\u001b[39;49m\u001b[38;5;130;43;01m\\n\u001b[39;49;00m\u001b[33;43mobs_ds = xr.open_dataset(obs_url, engine=\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mh5netcdf\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[33;43m).tas_mean\u001b[39;49m\u001b[38;5;130;43;01m\\n\u001b[39;49;00m\u001b[33;43mobs_ds\u001b[39;49m\u001b[38;5;130;43;01m\\n\u001b[39;49;00m\u001b[33;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/IPython/core/interactiveshell.py:2565\u001b[39m, in \u001b[36mInteractiveShell.run_cell_magic\u001b[39m\u001b[34m(self, magic_name, line, cell)\u001b[39m\n\u001b[32m   2563\u001b[39m \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28mself\u001b[39m.builtin_trap:\n\u001b[32m   2564\u001b[39m     args = (magic_arg_s, cell)\n\u001b[32m-> \u001b[39m\u001b[32m2565\u001b[39m     result = \u001b[43mfn\u001b[49m\u001b[43m(\u001b[49m\u001b[43m*\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   2567\u001b[39m \u001b[38;5;66;03m# The code below prevents the output from being displayed\u001b[39;00m\n\u001b[32m   2568\u001b[39m \u001b[38;5;66;03m# when using magics with decorator @output_can_be_silenced\u001b[39;00m\n\u001b[32m   2569\u001b[39m \u001b[38;5;66;03m# when the last Python token in the expression is a ';'.\u001b[39;00m\n\u001b[32m   2570\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mgetattr\u001b[39m(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, \u001b[38;5;28;01mFalse\u001b[39;00m):\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/IPython/core/magics/execution.py:1470\u001b[39m, in \u001b[36mExecutionMagics.time\u001b[39m\u001b[34m(self, line, cell, local_ns)\u001b[39m\n\u001b[32m   1468\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m interrupt_occured:\n\u001b[32m   1469\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m exit_on_interrupt \u001b[38;5;129;01mand\u001b[39;00m captured_exception:\n\u001b[32m-> \u001b[39m\u001b[32m1470\u001b[39m         \u001b[38;5;28;01mraise\u001b[39;00m captured_exception\n\u001b[32m   1471\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m\n\u001b[32m   1472\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m out\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/IPython/core/magics/execution.py:1434\u001b[39m, in \u001b[36mExecutionMagics.time\u001b[39m\u001b[34m(self, line, cell, local_ns)\u001b[39m\n\u001b[32m   1432\u001b[39m st = clock2()\n\u001b[32m   1433\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m-> \u001b[39m\u001b[32m1434\u001b[39m     \u001b[43mexec\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mglob\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlocal_ns\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   1435\u001b[39m     out = \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[32m   1436\u001b[39m     \u001b[38;5;66;03m# multi-line %%time case\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m<timed exec>:3\u001b[39m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/api.py:760\u001b[39m, in \u001b[36mopen_dataset\u001b[39m\u001b[34m(filename_or_obj, engine, chunks, cache, decode_cf, mask_and_scale, decode_times, decode_timedelta, use_cftime, concat_characters, decode_coords, drop_variables, create_default_indexes, inline_array, chunked_array_type, from_array_kwargs, backend_kwargs, **kwargs)\u001b[39m\n\u001b[32m    748\u001b[39m decoders = _resolve_decoders_kwargs(\n\u001b[32m    749\u001b[39m     decode_cf,\n\u001b[32m    750\u001b[39m     open_backend_dataset_parameters=backend.open_dataset_parameters,\n\u001b[32m   (...)\u001b[39m\u001b[32m    756\u001b[39m     decode_coords=decode_coords,\n\u001b[32m    757\u001b[39m )\n\u001b[32m    759\u001b[39m overwrite_encoded_chunks = kwargs.pop(\u001b[33m\"\u001b[39m\u001b[33moverwrite_encoded_chunks\u001b[39m\u001b[33m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m)\n\u001b[32m--> \u001b[39m\u001b[32m760\u001b[39m backend_ds = \u001b[43mbackend\u001b[49m\u001b[43m.\u001b[49m\u001b[43mopen_dataset\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    761\u001b[39m \u001b[43m    \u001b[49m\u001b[43mfilename_or_obj\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    762\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdrop_variables\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdrop_variables\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    763\u001b[39m \u001b[43m    \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mdecoders\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    764\u001b[39m \u001b[43m    \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    765\u001b[39m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    766\u001b[39m ds = _dataset_from_backend_dataset(\n\u001b[32m    767\u001b[39m     backend_ds,\n\u001b[32m    768\u001b[39m     filename_or_obj,\n\u001b[32m   (...)\u001b[39m\u001b[32m    779\u001b[39m     **kwargs,\n\u001b[32m    780\u001b[39m )\n\u001b[32m    781\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m ds\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/h5netcdf_.py:499\u001b[39m, in \u001b[36mH5netcdfBackendEntrypoint.open_dataset\u001b[39m\u001b[34m(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta, format, group, lock, invalid_netcdf, phony_dims, decode_vlen_strings, driver, driver_kwds, storage_options)\u001b[39m\n\u001b[32m    496\u001b[39m emit_phony_dims_warning, phony_dims = _check_phony_dims(phony_dims)\n\u001b[32m    498\u001b[39m filename_or_obj = _normalize_filename_or_obj(filename_or_obj)\n\u001b[32m--> \u001b[39m\u001b[32m499\u001b[39m store = \u001b[43mH5NetCDFStore\u001b[49m\u001b[43m.\u001b[49m\u001b[43mopen\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    500\u001b[39m \u001b[43m    \u001b[49m\u001b[43mfilename_or_obj\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    501\u001b[39m \u001b[43m    \u001b[49m\u001b[38;5;28;43mformat\u001b[39;49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mformat\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[32m    502\u001b[39m \u001b[43m    \u001b[49m\u001b[43mgroup\u001b[49m\u001b[43m=\u001b[49m\u001b[43mgroup\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    503\u001b[39m \u001b[43m    \u001b[49m\u001b[43mlock\u001b[49m\u001b[43m=\u001b[49m\u001b[43mlock\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    504\u001b[39m \u001b[43m    \u001b[49m\u001b[43minvalid_netcdf\u001b[49m\u001b[43m=\u001b[49m\u001b[43minvalid_netcdf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    505\u001b[39m \u001b[43m    \u001b[49m\u001b[43mphony_dims\u001b[49m\u001b[43m=\u001b[49m\u001b[43mphony_dims\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    506\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdecode_vlen_strings\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdecode_vlen_strings\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    507\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdriver\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdriver\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    508\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdriver_kwds\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdriver_kwds\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    509\u001b[39m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[43m=\u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    510\u001b[39m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    512\u001b[39m store_entrypoint = StoreBackendEntrypoint()\n\u001b[32m    514\u001b[39m ds = store_entrypoint.open_dataset(\n\u001b[32m    515\u001b[39m     store,\n\u001b[32m    516\u001b[39m     mask_and_scale=mask_and_scale,\n\u001b[32m   (...)\u001b[39m\u001b[32m    522\u001b[39m     decode_timedelta=decode_timedelta,\n\u001b[32m    523\u001b[39m )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/h5netcdf_.py:184\u001b[39m, in \u001b[36mH5NetCDFStore.open\u001b[39m\u001b[34m(cls, filename, mode, format, group, lock, autoclose, invalid_netcdf, phony_dims, decode_vlen_strings, driver, driver_kwds, storage_options)\u001b[39m\n\u001b[32m    182\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(filename, \u001b[38;5;28mstr\u001b[39m) \u001b[38;5;129;01mand\u001b[39;00m is_remote_uri(filename) \u001b[38;5;129;01mand\u001b[39;00m driver \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m    183\u001b[39m     mode_ = \u001b[33m\"\u001b[39m\u001b[33mrb\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m mode == \u001b[33m\"\u001b[39m\u001b[33mr\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m mode\n\u001b[32m--> \u001b[39m\u001b[32m184\u001b[39m     filename = \u001b[43m_open_remote_file\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    185\u001b[39m \u001b[43m        \u001b[49m\u001b[43mfilename\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m=\u001b[49m\u001b[43mmode_\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[43m=\u001b[49m\u001b[43mstorage_options\u001b[49m\n\u001b[32m    186\u001b[39m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    188\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(filename, BytesIOProxy):\n\u001b[32m    189\u001b[39m     source = filename\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/common.py:219\u001b[39m, in \u001b[36m_open_remote_file\u001b[39m\u001b[34m(file, mode, storage_options)\u001b[39m\n\u001b[32m    214\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mfsspec\u001b[39;00m\n\u001b[32m    216\u001b[39m fs, _, paths = fsspec.get_fs_token_paths(\n\u001b[32m    217\u001b[39m     file, mode=mode, storage_options=storage_options\n\u001b[32m    218\u001b[39m )\n\u001b[32m--> \u001b[39m\u001b[32m219\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfs\u001b[49m\u001b[43m.\u001b[49m\u001b[43mopen\u001b[49m\u001b[43m(\u001b[49m\u001b[43mpaths\u001b[49m\u001b[43m[\u001b[49m\u001b[32;43m0\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m=\u001b[49m\u001b[43mmode\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/pelicanfs/core.py:898\u001b[39m, in \u001b[36mPelicanFileSystem.open\u001b[39m\u001b[34m(self, path, mode, **kwargs)\u001b[39m\n\u001b[32m    896\u001b[39m     data_url, director_response = sync(\u001b[38;5;28mself\u001b[39m.loop, \u001b[38;5;28mself\u001b[39m.get_origin_url, path)\n\u001b[32m    897\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m898\u001b[39m     data_url, director_response = \u001b[43msync\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mloop\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mget_working_cache\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpath\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    900\u001b[39m \u001b[38;5;66;03m# Handle token generation if required\u001b[39;00m\n\u001b[32m    901\u001b[39m operation = \u001b[38;5;28mself\u001b[39m._get_token_operation(\u001b[33m\"\u001b[39m\u001b[33mopen\u001b[39m\u001b[33m\"\u001b[39m)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/asyn.py:103\u001b[39m, in \u001b[36msync\u001b[39m\u001b[34m(loop, func, timeout, *args, **kwargs)\u001b[39m\n\u001b[32m    101\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m FSTimeoutError \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mreturn_result\u001b[39;00m\n\u001b[32m    102\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(return_result, \u001b[38;5;167;01mBaseException\u001b[39;00m):\n\u001b[32m--> \u001b[39m\u001b[32m103\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m return_result\n\u001b[32m    104\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    105\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m return_result\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/asyn.py:56\u001b[39m, in \u001b[36m_runner\u001b[39m\u001b[34m(event, coro, result, timeout)\u001b[39m\n\u001b[32m     54\u001b[39m     coro = asyncio.wait_for(coro, timeout=timeout)\n\u001b[32m     55\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m---> \u001b[39m\u001b[32m56\u001b[39m     result[\u001b[32m0\u001b[39m] = \u001b[38;5;28;01mawait\u001b[39;00m coro\n\u001b[32m     57\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m ex:\n\u001b[32m     58\u001b[39m     result[\u001b[32m0\u001b[39m] = ex\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/pelicanfs/core.py:546\u001b[39m, in \u001b[36mPelicanFileSystem.get_working_cache\u001b[39m\u001b[34m(self, fileloc)\u001b[39m\n\u001b[32m    544\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m cache_list:\n\u001b[32m    545\u001b[39m     logger.error(\u001b[33m\"\u001b[39m\u001b[33mNo working cache found\u001b[39m\u001b[33m\"\u001b[39m)\n\u001b[32m--> \u001b[39m\u001b[32m546\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m NoAvailableSource()\n\u001b[32m    548\u001b[39m \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28mself\u001b[39m._namespace_lock:\n\u001b[32m    549\u001b[39m     \u001b[38;5;28mself\u001b[39m._namespace_cache[namespace] = _CacheManager(cache_list, director_response)\n\n\u001b[31mNoAvailableSource\u001b[39m: ","ename":"NoAvailableSource","evalue":""}],"key":"qdYFABGU32"}],"key":"YF6D9wjM1X"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Some helpful functions","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yLXnvPEP0J"}],"identifier":"some-helpful-functions","label":"Some helpful functions","html_id":"some-helpful-functions","implicit":true,"key":"F24gVpcfTZ"}],"key":"oUQXXSRLkz"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def drop_all_bounds(ds):\n    drop_vars = [vname for vname in ds.coords\n                 if (('_bounds') in vname ) or ('_bnds') in vname]\n    return ds.drop_vars(drop_vars)\n\ndef open_dset(df):\n    assert len(df) == 1\n    mapper = fsspec.get_mapper(df.zstore.values[0])\n    #path = df.zstore.values[0][7:]+\".zmetadata\"\n    ds = xr.open_zarr(mapper, consolidated=True)\n    return drop_all_bounds(ds)\n\ndef open_delayed(df):\n    return dask.delayed(open_dset)(df)\n\nfrom collections import defaultdict\ndsets = defaultdict(dict)\n\nfor group, df in col_subset.df.groupby(by=['source_id', 'experiment_id']):\n    dsets[group[0]][group[1]] = open_delayed(df)","key":"Y7vgw8ivz5"},{"type":"output","id":"tKrZkTImH2GBBjXygqPgA","data":[],"key":"mvGOM3ccDa"}],"key":"BCpM1PG5Sq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dsets_ = dask.compute(dict(dsets))[0]","key":"KfAE7R86DT"},{"type":"output","id":"-B1tbkpXLsX6SHSY2cKgD","data":[],"key":"LNAzyS2iM1"}],"key":"H6ZzPd3Ts4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#calculate global means\ndef get_lat_name(ds):\n    for lat_name in ['lat', 'latitude']:\n        if lat_name in ds.coords:\n            return lat_name\n    raise RuntimeError(\"Couldn't find a latitude coordinate\")\n\ndef global_mean(ds):\n    lat = ds[get_lat_name(ds)]\n    weight = np.cos(np.deg2rad(lat))\n    weight /= weight.mean()\n    other_dims = set(ds.dims) - {'time'}\n    return (ds * weight).mean(other_dims)","key":"iaeKOWfIfL"},{"type":"output","id":"noyGxBjeJK-YvMJdHzeXK","data":[],"key":"iecKw9NbGb"}],"key":"CFbdQSv53G"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#calculate global means\ndef get_lat_name(ds):\n    for lat_name in ['lat', 'latitude']:\n        if lat_name in ds.coords:\n            return lat_name\n    raise RuntimeError(\"Couldn't find a latitude coordinate\")\n\ndef global_mean(ds):\n    lat = ds[get_lat_name(ds)]\n    weight = np.cos(np.deg2rad(lat))\n    weight /= weight.mean()\n    other_dims = set(ds.dims) - {'time'}\n    return (ds * weight).mean(other_dims)","key":"TnzNGa6qq9"},{"type":"output","id":"w4N8zPCHdfu_ZNtQ2yrS6","data":[],"key":"hbpagSNTj3"}],"key":"ZG0aqsux3F"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"GMST computation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GyJGapgx13"}],"identifier":"gmst-computation","label":"GMST computation","html_id":"gmst-computation","implicit":true,"key":"Fgtz1x5fx5"}],"key":"UHUJAYoU1C"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"expt_da = xr.DataArray(expts, dims='experiment_id', name='experiment_id',\n                       coords={'experiment_id': expts})\n\ndsets_aligned = {}\n\nfor k, v in tqdm(dsets_.items()):\n    expt_dsets = v.values()\n    if any([d is None for d in expt_dsets]):\n        print(f\"Missing experiment for {k}\")\n        continue\n\n    for ds in expt_dsets:\n        ds.coords['year'] = ds.time.dt.year\n\n    # workaround for\n    # https://github.com/pydata/xarray/issues/2237#issuecomment-620961663\n    dsets_ann_mean = [v[expt].pipe(global_mean).swap_dims({'time': 'year'})\n                             .drop_vars('time').coarsen(year=12).mean()\n                      for expt in expts]\n\n    # align everything with the 4xCO2 experiment\n    dsets_aligned[k] = xr.concat(dsets_ann_mean, join='outer',dim=expt_da)","key":"eSfTZUyyRp"},{"type":"output","id":"DSvy9TPi5tNboGarcztc-","data":[],"key":"Vgz51NjbEu"}],"key":"u2hEXvT7xn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nwith progress.ProgressBar():\n    dsets_aligned_ = dask.compute(dsets_aligned)[0]","key":"gGr3hsIiyX"},{"type":"output","id":"rmH4rbQj-Xb1E3lzRFw28","data":[],"key":"j06cVqAcgk"}],"key":"Hcd79dWC7y"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"source_ids = list(dsets_aligned_.keys())\nsource_da = xr.DataArray(source_ids, dims='source_id', name='source_id',\n                         coords={'source_id': source_ids})\n\nbig_ds = xr.concat([ds.reset_coords(drop=True)\n                    for ds in dsets_aligned_.values()],\n                    dim=source_da)\n\nbig_ds","key":"KMgYnNPng7"},{"type":"output","id":"oyF5aJyfMrcfS_39NmCNh","data":[],"key":"zri1XxMTWX"}],"key":"BRpDL8F4db"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"hint","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint","key":"nxHvmSRkmS"}],"key":"EFpC2tf4gd"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Note that even though the variable is called tas, the DataArray big_ds actually has the global and annual mean of surface temperatures! If you are wondering why this is the case, take a look at all the functions that were applied to obtain dsets_ann_mean!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"khJKuq4BWE"}],"key":"G3fdQCggy5"}],"key":"r6WH5gHQC8"}],"key":"hMVRpOkUfl"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Compute annual mean temperatures anomalies of observational data\nobs_gmsta = obs_ds.resample(time='YS').mean(dim='time')\n# obs_gmsta","key":"VnDtmWVNN3"},{"type":"output","id":"E84LMGMozzCebwqejqxbb","data":[],"key":"jIq6BIVDv3"}],"key":"jlsUgjnbyQ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compute anomlaies and plot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w52JCIuXGD"}],"identifier":"compute-anomlaies-and-plot","label":"Compute anomlaies and plot","html_id":"compute-anomlaies-and-plot","implicit":true,"key":"QPXcvTRu6f"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We will compute the temperature anomalies w.r.t 1960-1990 baseline period","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"x2ROpMdEVB"}],"key":"Zj6EvoVXMt"}],"key":"P0spzEMKHV"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Convert xarray datasets to pandas dataframes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WUKMSWyVIg"}],"key":"JULLntaRui"}],"key":"K8ud9O8sVh"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Use Seaborn to plot GMSTA","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OYdsnqmxvK"}],"key":"WzE3sGU4l4"}],"key":"MJLLyHucCa"}],"key":"Pnkcsh0CCm"}],"key":"koj24fU7qs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"df_all = big_ds.to_dataframe().reset_index()\ndf_all.head()","key":"fA8bGbroys"},{"type":"output","id":"09QhC2uxyXOSuOdR8Czux","data":[],"key":"f3kkgO6hIp"}],"key":"F18GhDfLkY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define the baseline period\nbaseline_df = df_all[(df_all[\"year\"] >= 1960) & (df_all[\"year\"] <= 1990)]\n\n# Compute the baseline mean\nbaseline_mean = baseline_df[\"tas\"].mean()\n\n# Compute anomalies\ndf_all[\"tas_anomaly\"] = df_all[\"tas\"] - baseline_mean\ndf_all","key":"yXXhc3FNnl"},{"type":"output","id":"DuDHaZlHOAqhfoyqqXGTY","data":[],"key":"j7qCIoQj6I"}],"key":"fBA7kjvVEK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"obs_df = obs_gmsta.to_dataframe(name='tas_anomaly').reset_index()","key":"lnXcXWR8uW"},{"type":"output","id":"lXTR8TyqXFOjBTi8-Crnq","data":[],"key":"zhWc9MLgwn"}],"key":"wYCAFqBInt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Convert 'time' to 'year' (keeping only the year)\nobs_df['year'] = obs_df['time'].dt.year\n\n# Drop the original 'time' column since we extracted 'year'\nobs_df = obs_df[['year', 'tas_anomaly']]\nobs_df","key":"sVn29Z7hFs"},{"type":"output","id":"ZszuHkrbVg7twikhamOK4","data":[],"key":"hjdG6d0AaJ"}],"key":"c2pSEp8NxY"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Almost there! Let us now use seaborn to plot all the anomalies","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Y5JxxcZxRf"}],"key":"gd8zq35HCi"}],"key":"nywHZX5R9h"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"g = sns.relplot(data=df_all, x=\"year\", y=\"tas_anomaly\",\n                hue='experiment_id', kind=\"line\", errorbar=\"sd\", aspect=2, palette=\"Set2\")  # Adjust the color palette)\n\n# Get the current axis from the FacetGrid\nax = g.ax\n\n# Overlay the observational data in red\nsns.lineplot(data=obs_df, x=\"year\", y=\"tas_anomaly\",color=\"red\", \n             linestyle=\"dashed\", linewidth=2,label=\"Observations\", ax=ax)\n\n# Adjust the legend to include observations\nax.legend(title=\"Experiment ID + Observations\")\n\n# Show the plot\nplt.show()","key":"uxStf8KEvJ"},{"type":"output","id":"5NmC8USmD6YrHaUlMkJdk","data":[],"key":"jTRq8OMNDC"}],"key":"bMMBdoAU6E"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wC7k18Uzi6"}],"key":"NMPjpxTpVb"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TE8ocnNeeF"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"yHjM0goTuJ"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In this notebook, we used surface air temperature data from several CMIP6 models for the ‘historical’, ‘SSP245’ and ‘SSP370’ runs to compute Global Mean Surface Temperature Anomaly (GMSTA) relative to the 1960-1990 baseline period and compare it with anomalies computed from the HadCRUT monthly surface temperature dataset. We used a modified intake-ESM catalog and pelicanFS to ‘stream/download’ temperature data from two different OSDF origins. The CMIP6 model data was streamed from the AWS OpenData origin in the us-west-2 region and the observational data was streamed from NCAR’s OSDF origin.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XAc4p5PruC"}],"key":"aagWU1Wi4z"}],"key":"XC9uIDEvw5"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CoVLVLoiBV"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"YGau2sOVww"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://gallery.pangeo.io/repos/pangeo-gallery/cmip6/global_mean_surface_temp.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Original notebook","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qVBzkLoIXR"}],"urlSource":"https://gallery.pangeo.io/repos/pangeo-gallery/cmip6/global_mean_surface_temp.html","key":"BHdyla1VSU"},{"type":"text","value":" in the Pangeo Gallery by Henri Drake and Ryan Abernathey","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"V6ImGcFGVI"}],"key":"w3eI1N63x9"}],"key":"lIJJvtws2v"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://projectpythia.org/cmip6-cookbook/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"CMIP6 cookbook","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wGvHp2Ib4t"}],"urlSource":"https://projectpythia.org/cmip6-cookbook/","key":"eybbqtrbgp"},{"type":"text","value":" by Ryan Abernathey, Henri Drake, Robert Ford and Max Grover","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rTvcHi7vGF"}],"key":"IChw6rerHx"}],"key":"wI0SyrglCk"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Coupled Model Intercomparison Project 6 was accessed from ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"K437MgkQvt"},{"type":"link","url":"https://registry.opendata.aws/cmip6","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"https://​registry​.opendata​.aws​/cmip6","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"hkeXlTUcqx"}],"urlSource":"https://registry.opendata.aws/cmip6","key":"XW7IhZlraY"},{"type":"text","value":" using a modified intake-ESM catalog hosted on NCAR’s RDA","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Rfesqa9Lr3"}],"key":"GIDmkAQ1Xi"}],"key":"viNpz79G1S"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We thank the UK Met Office Hadley Center for providing the observational data","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"k1N4xca8z1"}],"key":"fDsOfl2snM"}],"key":"RazgP4mA3U"}],"key":"zjKwERtjAf"}],"key":"uMalMdLMLA"}],"key":"mjvBGHNMTq"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Calculate Surface Ocean Heat using CESM2 LENS data","url":"/notebooks/cesm2-oceanheat","group":"NCAR examples"},"next":{"title":"Exploring Salinity Patterns in South Florida Coastal Waters","url":"/notebooks/envistor-foundations","group":"Envistor examples"}}},"domain":"http://localhost:3000"}