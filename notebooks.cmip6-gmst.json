{"version":2,"kind":"Notebook","sha256":"17bfb02f27605404a69c2dc9be87f2b5cbddd8832b4352aacee4f04f955aee28","slug":"notebooks.cmip6-gmst","location":"/notebooks/02_cmip6_gmst.ipynb","dependencies":[],"frontmatter":{"title":"Global Mean Surface Temperature Anomalies (GMSTA) from CMIP6 data","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Harsha R. Hampapura","given":"Harsha R.","family":"Hampapura"},"name":"Harsha R. Hampapura","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Brian Bockelman","given":"Brian","family":"Bockelman"},"name":"Brian Bockelman","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Alexander Hoelzeman","given":"Alexander","family":"Hoelzeman"},"name":"Alexander Hoelzeman","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Carrie Wall","given":"Carrie","family":"Wall"},"name":"Carrie Wall","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Emma Turetsky","given":"Emma","family":"Turetsky"},"name":"Emma Turetsky","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Amandha Wingert Barok","given":"Amandha Wingert","family":"Barok"},"name":"Amandha Wingert Barok","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Aashish Panta","given":"Aashish","family":"Panta"},"name":"Aashish Panta","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Riley Conroy","given":"Riley","family":"Conroy"},"name":"Riley Conroy","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Douglas Schuster","given":"Douglas","family":"Schuster"},"name":"Douglas Schuster","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Justin Hiemstra","given":"Justin","family":"Hiemstra"},"name":"Justin Hiemstra","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Joanmarie Del Vecchio","given":"Joanmarie Del","family":"Vecchio"},"name":"Joanmarie Del Vecchio","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Kibiwott Koech","given":"Kibiwott","family":"Koech"},"name":"Kibiwott Koech","id":"contributors-myst-generated-uid-11"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/osdf-cookbook","copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"source_url":"https://github.com/projectpythia/osdf-cookbook/blob/main/notebooks/02_cmip6_gmst.ipynb","edit_url":"https://github.com/projectpythia/osdf-cookbook/edit/main/notebooks/02_cmip6_gmst.ipynb","exports":[{"format":"ipynb","filename":"02_cmip6_gmst.ipynb","url":"/osdf-cookbook/build/02_cmip6_gmst-d2d90a9a3ac81712023a1c72c721c3e5.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WoKSOkqScQ"}],"key":"nAAA19Btdb"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zCMGNrmd9S"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"mM4Olix7W5"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In this notebook we will compute the Global Mean Surface Temperature Anomalies (GMSTA) from CMIP6 data and compare it with observations. This notebook is heavily inspired by the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fDjcNqPLiV"},{"type":"link","url":"https://projectpythia.org/cmip6-cookbook/notebooks/example-workflows/gmst/","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"GMST example","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ODzLu4vkso"}],"urlSource":"https://projectpythia.org/cmip6-cookbook/notebooks/example-workflows/gmst/","key":"TrUeblOwBs"},{"type":"text","value":" in the CMIP6 cookbook and we thank the authors for their workflow.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"rkzVbFvppE"}],"key":"CTtjfboH5a"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We will get the CMIP6 temperature data from the AWS open data program via the us-west-2 origin","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"DHmUcxI1zC"}],"key":"OJJrEMz2ZF"}],"key":"MwSgV95zqT"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"In order to do this, we will use an intake-ESM catalog (hosted on NCAR’s GDEX) that uses pelicanFS backed links instead of https or s3 links","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fhH6fokT3Y"}],"key":"xyFEfEU3uX"}],"key":"XdWRfW8hsN"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We will grab observational data hosted on NCAR’s GDEX, which is accessible via the NCAR origin","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"mmFruaGA65"}],"key":"EoVhbMdxoz"}],"key":"dz2NmI3jSx"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Please refer to the first chapter of this cookbook to learn more about OSDF, pelican or pelicanFS","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"NtnHEmTGl9"}],"key":"VBrKNIoGSJ"}],"key":"rH7mcpIo3o"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"This notebook demonstrates that you can seamlessly stream data from multiple OSDF origins in your workflow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"bMyd9id5Eh"}],"key":"SWpdBkjekz"}],"key":"gU5O4FnbeY"}],"key":"sx6WhTSJ1P"}],"key":"KwqjIINY1x"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Qp7WeoZhaY"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"wJ5VZ7Bj2t"},{"type":"table","position":{"start":{"line":2,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"CDKmikeetw"}],"key":"b8RJppvj4t"},{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"oEFiMJtXwi"}],"key":"d8Bk6eTsnx"},{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"EzBSVRzlW7"}],"key":"fJVBBOwM2D"}],"key":"dMCGEy0wLr"},{"type":"tableRow","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Intro to Intake-ESM","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"eQNsY9zjlP"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy","key":"jubTyxMxQc"}],"key":"eVegddIv91"},{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"MTosz5r4jZ"}],"key":"xGpnXTEN5v"},{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Used for searching CMIP6 data","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BKkAf4s7Ki"}],"key":"MzuHuJHhcj"}],"key":"S7j6kFoNVP"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://zarr.dev/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Understanding of Zarr","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Her7G2BTte"}],"urlSource":"https://zarr.dev/","key":"FbhBbA4Pqg"}],"key":"NFboRsbKyj"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"dZlbs4v7Zc"}],"key":"n8eQaBZEZ3"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Familiarity with metadata structure","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"r6Ys9FKSyQ"}],"key":"qzzkfD6R6k"}],"key":"vOHHyEpNyh"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://seaborn.pydata.org/","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Seaborn","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"DY2QELbeaJ"}],"urlSource":"https://seaborn.pydata.org/","key":"oqtQKg6P9E"}],"key":"jig4AwtS2t"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"I7xLPe0166"}],"key":"zdLr5oi6Nb"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Used for plotting","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"U3K8bOzvCY"}],"key":"QNejIcRI8J"}],"key":"wXIgG2mWwv"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/osdf-cookbook/notebooks/pelicanfs/","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"PelicanFS","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"yYbVRrp1Gy"}],"urlSource":"https://projectpythia.org/osdf-cookbook/notebooks/pelicanfs/","key":"MtaewFuhyg"}],"key":"tD1AYNsmAp"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"b0pOgHvZOX"}],"key":"apSuXr4PJF"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The python package used to stream data in this notebook","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"LadR8c3Vn6"}],"key":"lAJlflIrs3"}],"key":"u68KAfZdjw"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"OSDF","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"jDECJcU9vG"}],"key":"Re30pyhzvP"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"VY3kColJFS"}],"key":"S8gcICbcXP"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"OSDF is used to stream data in this notebook","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"uR39d09eiU"}],"key":"UASopVKraB"}],"key":"FJLYbcWVW2"}],"key":"akWvisQXC2"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"q9pBUTW6UB"}],"key":"v08Zq84Fs4"},{"type":"text","value":": 20 mins","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"GebHNnBqqV"}],"key":"bWJTUGSJjH"}],"key":"UAuymq5Gap"}],"key":"YcZSV0ez7u"}],"key":"N0iiXztFzu"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w5rdWOC3wg"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"VaRfu2xUPW"}],"key":"Uue9M8TTcM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from matplotlib import pyplot as plt\nimport xarray as xr\nimport numpy as np\nfrom dask.diagnostics import progress\nfrom tqdm.autonotebook import tqdm\nimport intake\nimport fsspec\nimport seaborn as sns\nimport aiohttp\nimport dask\nfrom dask.distributed import LocalCluster\nimport pelicanfs ","key":"sa9u4YvghP"},{"type":"output","id":"2IS104Uz-mW-pagsZtyY1","data":[{"output_type":"stream","name":"stderr","text":"/tmp/ipykernel_4035/2849986847.py:5: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from tqdm.autonotebook import tqdm\n"}],"key":"Sgoic4k8G9"}],"key":"GCeTLNmLse"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We will use an intake-ESM catalog hosted on NCAR’s Geoscience Data Exchange. This is nothing but the AWS cmip6 catalog modified to use OSDF","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XQtfi86CPf"}],"key":"MDL2dx2ghx"}],"key":"qOSItBEi3d"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Load catalog URL\ngdex_url     =  'https://data.gdex.ucar.edu/'\ncat_url     = gdex_url +  'd850001/catalogs/osdf/cmip6-aws/cmip6-osdf-zarr.json'\nprint(cat_url)","key":"B6tmgeNYMG"},{"type":"output","id":"AKO9McNhyU-b9yZ1uOdWI","data":[{"output_type":"stream","name":"stdout","text":"https://data.gdex.ucar.edu/d850001/catalogs/osdf/cmip6-aws/cmip6-osdf-zarr.json\n"}],"key":"k92P6spYOB"}],"key":"XrvrAB60Rv"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Set up local dask cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"r4dPVexR7y"}],"identifier":"set-up-local-dask-cluster","label":"Set up local dask cluster","html_id":"set-up-local-dask-cluster","implicit":true,"key":"XCMgfWbeFR"}],"key":"VOIXa7Z9rZ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Before we do any computation let us first set up a local cluster using dask","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Hs9EsGCL9u"}],"key":"kmgtosBbIP"}],"key":"Iw7T6Ex4YL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"cluster = LocalCluster()          \nclient = cluster.get_client()","key":"lTexTdcl5O"},{"type":"output","id":"WQbrqaNlwR-sSLscIybAo","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/distributed/node.py:187: UserWarning: Port 8787 is already in use.\nPerhaps you already have a cluster running?\nHosting the HTTP server on port 43313 instead\n  warnings.warn(\n"}],"key":"iirG6QpzUX"}],"key":"i5yjmNW28e"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Scale the cluster\nn_workers = 5\ncluster.scale(n_workers)\ncluster","key":"YyFjPRP0yn"},{"type":"output","id":"I3GAzM5Cgh5xyA9XmwGo9","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"LocalCluster(c57ff124, 'tcp://127.0.0.1:39699', workers=4, threads=4, memory=15.62 GiB)","content_type":"text/plain"},"text/html":{"content":"<div class=\"jp-RenderedHTMLCommon jp-RenderedHTML jp-mod-trusted jp-OutputArea-output\">\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\">\n    </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px; margin-top: 0px;\">LocalCluster</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">c57ff124</p>\n        <table style=\"width: 100%; text-align: left;\">\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:43313/status\" target=\"_blank\">http://127.0.0.1:43313/status</a>\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Workers:</strong> 4\n                </td>\n            </tr>\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Total threads:</strong> 4\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Total memory:</strong> 15.62 GiB\n                </td>\n            </tr>\n            \n            <tr>\n    <td style=\"text-align: left;\"><strong>Status:</strong> running</td>\n    <td style=\"text-align: left;\"><strong>Using processes:</strong> True</td>\n</tr>\n\n            \n        </table>\n\n        <details>\n            <summary style=\"margin-bottom: 20px;\">\n                <h3 style=\"display: inline;\">Scheduler Info</h3>\n            </summary>\n\n            <div style=\"\">\n    <div>\n        <div style=\"width: 24px; height: 24px; background-color: #FFF7E5; border: 3px solid #FF6132; border-radius: 5px; position: absolute;\"> </div>\n        <div style=\"margin-left: 48px;\">\n            <h3 style=\"margin-bottom: 0px;\">Scheduler</h3>\n            <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Scheduler-4ad42bab-bc69-4d1d-889e-9f555bf0ba55</p>\n            <table style=\"width: 100%; text-align: left;\">\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Comm:</strong> tcp://127.0.0.1:39699\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Workers:</strong> 0 \n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:43313/status\" target=\"_blank\">http://127.0.0.1:43313/status</a>\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total threads:</strong> 0\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Started:</strong> Just now\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total memory:</strong> 0 B\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <details style=\"margin-left: 48px;\">\n        <summary style=\"margin-bottom: 20px;\">\n            <h3 style=\"display: inline;\">Workers</h3>\n        </summary>\n\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 0</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:34553\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:42433/status\" target=\"_blank\">http://127.0.0.1:42433/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:39987\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-zmbneyrq\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 1</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:46357\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:42391/status\" target=\"_blank\">http://127.0.0.1:42391/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:44453\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-9cxcjjdx\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 2</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:45645\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:41229/status\" target=\"_blank\">http://127.0.0.1:41229/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:39471\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-1ofmbfhe\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 3</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:43849\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:46271/status\" target=\"_blank\">http://127.0.0.1:46271/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:38717\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-vojcfo60\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n\n    </details>\n</div>\n\n        </details>\n    </div>\n</div>","content_type":"text/html"}}}],"key":"ZmOEi8geh8"}],"key":"vbk0pVEmzz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Data Loading","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b0hIDQAEtx"}],"identifier":"data-loading","label":"Data Loading","html_id":"data-loading","implicit":true,"key":"Ru01JKdqQK"},{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Load CMIP6 data from AWS","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Q13zBe6N5M"}],"identifier":"load-cmip6-data-from-aws","label":"Load CMIP6 data from AWS","html_id":"load-cmip6-data-from-aws","implicit":true,"key":"P2Icv56RKu"}],"key":"gh90Wwy5xf"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"col = intake.open_esm_datastore(cat_url)\ncol","key":"L05myyrKFB"},{"type":"output","id":"pF2tw_uAW1iQbBGlwCDzF","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"<p><strong>pangeo-cmip6 catalog with 7780 dataset(s) from 522217 asset(s)</strong>:</p> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unique</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>activity_id</th>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>institution_id</th>\n      <td>36</td>\n    </tr>\n    <tr>\n      <th>source_id</th>\n      <td>88</td>\n    </tr>\n    <tr>\n      <th>experiment_id</th>\n      <td>170</td>\n    </tr>\n    <tr>\n      <th>member_id</th>\n      <td>657</td>\n    </tr>\n    <tr>\n      <th>table_id</th>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>variable_id</th>\n      <td>709</td>\n    </tr>\n    <tr>\n      <th>grid_label</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>zstore</th>\n      <td>522217</td>\n    </tr>\n    <tr>\n      <th>dcpp_init_year</th>\n      <td>60</td>\n    </tr>\n    <tr>\n      <th>version</th>\n      <td>744</td>\n    </tr>\n    <tr>\n      <th>derived_variable_id</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"bnIPOpZzDe"}],"key":"lzqnnvcspf"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# there is currently a significant amount of data for these runs\nexpts = ['historical', 'ssp245', 'ssp370']\n\nquery = dict(\n    experiment_id=expts,\n    table_id='Amon',\n    variable_id=['tas'],\n    member_id = 'r1i1p1f1',\n    #activity_id = 'CMIP',\n)\n\ncol_subset = col.search(require_all_on=[\"source_id\"], **query)\ncol_subset","key":"Pnd601OZIb"},{"type":"output","id":"sDss18NaWmaDI52zaSxO5","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"<p><strong>pangeo-cmip6 catalog with 81 dataset(s) from 81 asset(s)</strong>:</p> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unique</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>activity_id</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>institution_id</th>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>source_id</th>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>experiment_id</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>member_id</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>table_id</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>variable_id</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>grid_label</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>zstore</th>\n      <td>81</td>\n    </tr>\n    <tr>\n      <th>dcpp_init_year</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>version</th>\n      <td>46</td>\n    </tr>\n    <tr>\n      <th>derived_variable_id</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"pnvNgAZKC4"}],"key":"SIeP1ODu41"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Let us inspect the zarr store paths to see if we are using the pelican protocol.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ztv8gegpbV"}],"key":"QG5hRPZh3F"}],"key":"GMqMbjJhTn"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We see that zstore column has paths that start with ‘osdf:///’ instead of ‘https://’ which tells us that we are not using a simple ‘https’ GET request to fetch the data.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ZKmMOH046e"}],"key":"chXAIGzGHq"}],"key":"jPWpvpNwtU"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"In order to know more about the pelican protocol, please refer to the first chapter of this cookbook.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eMxn6B99ox"}],"key":"fbjdB3yVpL"}],"key":"BwiH5HaRDL"}],"key":"JqoVZxt3KS"}],"key":"c3Fn1isIPg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"col_subset.df","key":"eBXzRZdOHM"},{"type":"output","id":"Bz5i3HS2XMAY9-t4j7-f9","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"    activity_id institution_id      source_id experiment_id member_id  \\\n0          CMIP   CSIRO-ARCCSS     ACCESS-CM2    historical  r1i1p1f1   \n1   ScenarioMIP   CSIRO-ARCCSS     ACCESS-CM2        ssp245  r1i1p1f1   \n2   ScenarioMIP   CSIRO-ARCCSS     ACCESS-CM2        ssp370  r1i1p1f1   \n3   ScenarioMIP            AWI  AWI-CM-1-1-MR        ssp245  r1i1p1f1   \n4   ScenarioMIP            AWI  AWI-CM-1-1-MR        ssp370  r1i1p1f1   \n..          ...            ...            ...           ...       ...   \n76  ScenarioMIP            NCC     NorESM2-MM        ssp370  r1i1p1f1   \n77  ScenarioMIP            NCC     NorESM2-MM        ssp245  r1i1p1f1   \n78         CMIP        AS-RCEC        TaiESM1    historical  r1i1p1f1   \n79  ScenarioMIP        AS-RCEC        TaiESM1        ssp370  r1i1p1f1   \n80  ScenarioMIP        AS-RCEC        TaiESM1        ssp245  r1i1p1f1   \n\n   table_id variable_id grid_label  \\\n0      Amon         tas         gn   \n1      Amon         tas         gn   \n2      Amon         tas         gn   \n3      Amon         tas         gn   \n4      Amon         tas         gn   \n..      ...         ...        ...   \n76     Amon         tas         gn   \n77     Amon         tas         gn   \n78     Amon         tas         gn   \n79     Amon         tas         gn   \n80     Amon         tas         gn   \n\n                                               zstore  dcpp_init_year  \\\n0   osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n1   osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n2   osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n3   osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n4   osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n..                                                ...             ...   \n76  osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n77  osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n78  osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n79  osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n80  osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...             NaN   \n\n     version  \n0   20191108  \n1   20191108  \n2   20191108  \n3   20190529  \n4   20190529  \n..       ...  \n76  20191108  \n77  20191108  \n78  20200623  \n79  20201014  \n80  20201124  \n\n[81 rows x 11 columns]","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>activity_id</th>\n      <th>institution_id</th>\n      <th>source_id</th>\n      <th>experiment_id</th>\n      <th>member_id</th>\n      <th>table_id</th>\n      <th>variable_id</th>\n      <th>grid_label</th>\n      <th>zstore</th>\n      <th>dcpp_init_year</th>\n      <th>version</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CMIP</td>\n      <td>CSIRO-ARCCSS</td>\n      <td>ACCESS-CM2</td>\n      <td>historical</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20191108</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ScenarioMIP</td>\n      <td>CSIRO-ARCCSS</td>\n      <td>ACCESS-CM2</td>\n      <td>ssp245</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20191108</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ScenarioMIP</td>\n      <td>CSIRO-ARCCSS</td>\n      <td>ACCESS-CM2</td>\n      <td>ssp370</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20191108</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ScenarioMIP</td>\n      <td>AWI</td>\n      <td>AWI-CM-1-1-MR</td>\n      <td>ssp245</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20190529</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ScenarioMIP</td>\n      <td>AWI</td>\n      <td>AWI-CM-1-1-MR</td>\n      <td>ssp370</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20190529</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>ScenarioMIP</td>\n      <td>NCC</td>\n      <td>NorESM2-MM</td>\n      <td>ssp370</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20191108</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>ScenarioMIP</td>\n      <td>NCC</td>\n      <td>NorESM2-MM</td>\n      <td>ssp245</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20191108</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>CMIP</td>\n      <td>AS-RCEC</td>\n      <td>TaiESM1</td>\n      <td>historical</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20200623</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>ScenarioMIP</td>\n      <td>AS-RCEC</td>\n      <td>TaiESM1</td>\n      <td>ssp370</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20201014</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>ScenarioMIP</td>\n      <td>AS-RCEC</td>\n      <td>TaiESM1</td>\n      <td>ssp245</td>\n      <td>r1i1p1f1</td>\n      <td>Amon</td>\n      <td>tas</td>\n      <td>gn</td>\n      <td>osdf:///aws-opendata/us-west-2/cmip6-pds/CMIP6...</td>\n      <td>NaN</td>\n      <td>20201124</td>\n    </tr>\n  </tbody>\n</table>\n<p>81 rows × 11 columns</p>\n</div>","content_type":"text/html"}}}],"key":"cqUr9UL0Jc"}],"key":"XNrkuSQjnR"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Grab some Observational time series data for comparison with ensemble spread","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"clQQUkDA4m"}],"identifier":"grab-some-observational-time-series-data-for-comparison-with-ensemble-spread","label":"Grab some Observational time series data for comparison with ensemble spread","html_id":"grab-some-observational-time-series-data-for-comparison-with-ensemble-spread","implicit":true,"key":"mC6nckIhD0"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"The observational data we will use is the HadCRUT5 dataset from the UK Met Office","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"YWswuExQ4g"}],"key":"ZL1PgFPplm"}],"key":"Fy6qzeuBeZ"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"The data has been downloaded to NCAR’s Geoscience Data Exchange (GDEX) from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hVbvHxrHKh"},{"type":"link","url":"https://www.metoffice.gov.uk/hadobs/hadcrut5/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"https://​www​.metoffice​.gov​.uk​/hadobs​/hadcrut5/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vRCaXhOUfc"}],"urlSource":"https://www.metoffice.gov.uk/hadobs/hadcrut5/","key":"SigH7Ltcdb"}],"key":"DAg8J5MWso"}],"key":"Sv1A6569Lm"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We will use an OSDF to access this copy from the GDEX. Again the links will start with ‘osdf:///’","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"yN4X1APuKO"}],"key":"giIdd0vdG5"}],"key":"jhXZoKAOLl"}],"key":"eRNB1e1eJm"}],"key":"d7UHlBVJh5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nobs_url    = 'osdf:///ncar/gdex/d850001/HadCRUT.5.0.2.0.analysis.summary_series.global.monthly.nc'\n#\nobs_ds = xr.open_dataset(obs_url, engine='h5netcdf').tas_mean\nobs_ds","key":"TB3WU3wT24"},{"type":"output","id":"3ps-REYyJeZ1V8nCMIoru","data":[{"output_type":"stream","name":"stdout","text":"CPU times: user 1.54 s, sys: 164 ms, total: 1.7 s\nWall time: 3.16 s\n"},{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"<xarray.DataArray 'tas_mean' (time: 2101)> Size: 17kB\n[2101 values with dtype=float64]\nCoordinates:\n  * time         (time) datetime64[ns] 17kB 1850-01-16T12:00:00 ... 2025-01-1...\n    latitude     float64 8B ...\n    longitude    float64 8B ...\n    realization  int64 8B ...\nAttributes:\n    long_name:     blended air_temperature_anomaly over land with sea_water_t...\n    units:         K\n    cell_methods:  area: mean (interval: 5.0 degrees_north 5.0 degrees_east) ...","content_type":"text/plain"},"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in notebooks */\n\n:root {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base rgba(0, 0, 0, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, white)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 15))\n  );\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base, rgba(255, 255, 255, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, #111111)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 15))\n  );\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n  line-height: 1.6;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-obj-name,\n.xr-group-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-group-name::before {\n  content: \"📁\";\n  padding-right: 0.3em;\n}\n\n.xr-group-name,\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n  margin: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n  border: 2px solid transparent !important;\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0) !important;\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-top: 4px;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-group-box {\n  display: inline-grid;\n  grid-template-columns: 0px 20px auto;\n  width: 100%;\n}\n\n.xr-group-box-vline {\n  grid-column-start: 1;\n  border-right: 0.2em solid;\n  border-color: var(--xr-border-color);\n  width: 0px;\n}\n\n.xr-group-box-hline {\n  grid-column-start: 2;\n  grid-row-start: 1;\n  height: 1em;\n  width: 20px;\n  border-bottom: 0.2em solid;\n  border-color: var(--xr-border-color);\n}\n\n.xr-group-box-contents {\n  grid-column-start: 3;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  border-color: var(--xr-background-color-row-odd);\n  margin-bottom: 0;\n  padding-top: 2px;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n  border-color: var(--xr-background-color-row-even);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  border-top: 2px dotted var(--xr-background-color);\n  padding-bottom: 20px !important;\n  padding-top: 10px !important;\n}\n\n.xr-var-attrs-in + label,\n.xr-var-data-in + label,\n.xr-index-data-in + label {\n  padding: 0 1px;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-data > pre,\n.xr-index-data > pre,\n.xr-var-data > table > tbody > tr {\n  background-color: transparent !important;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n\n.xr-var-attrs-in:checked + label > .xr-icon-file-text2,\n.xr-var-data-in:checked + label > .xr-icon-database,\n.xr-index-data-in:checked + label > .xr-icon-database {\n  color: var(--xr-font-color0);\n  filter: drop-shadow(1px 1px 5px var(--xr-font-color2));\n  stroke-width: 0.8px;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;tas_mean&#x27; (time: 2101)&gt; Size: 17kB\n[2101 values with dtype=float64]\nCoordinates:\n  * time         (time) datetime64[ns] 17kB 1850-01-16T12:00:00 ... 2025-01-1...\n    latitude     float64 8B ...\n    longitude    float64 8B ...\n    realization  int64 8B ...\nAttributes:\n    long_name:     blended air_temperature_anomaly over land with sea_water_t...\n    units:         K\n    cell_methods:  area: mean (interval: 5.0 degrees_north 5.0 degrees_east) ...</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-obj-name'>&#x27;tas_mean&#x27;</div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 2101</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-30a645e6-6114-4c2f-94d4-ce1d9a80476c' class='xr-array-in' type='checkbox' checked><label for='section-30a645e6-6114-4c2f-94d4-ce1d9a80476c' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>...</span></div><div class='xr-array-data'><pre>[2101 values with dtype=float64]</pre></div></div></li><li class='xr-section-item'><input id='section-351463b1-ea57-4251-a0f7-bf8e80cb446a' class='xr-section-summary-in' type='checkbox'  checked><label for='section-351463b1-ea57-4251-a0f7-bf8e80cb446a' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1850-01-16T12:00:00 ... 2025-01-...</div><input id='attrs-37b15591-5c47-4e4e-a290-3fe596aecf2f' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-37b15591-5c47-4e4e-a290-3fe596aecf2f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4800d65d-1d9b-4735-9aeb-5a7c3f8e3e28' class='xr-var-data-in' type='checkbox'><label for='data-4800d65d-1d9b-4735-9aeb-5a7c3f8e3e28' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>axis :</span></dt><dd>T</dd><dt><span>bounds :</span></dt><dd>time_bnds</dd><dt><span>standard_name :</span></dt><dd>time</dd><dt><span>long_name :</span></dt><dd>time</dd></dl></div><div class='xr-var-data'><pre>array([&#x27;1850-01-16T12:00:00.000000000&#x27;, &#x27;1850-02-15T00:00:00.000000000&#x27;,\n       &#x27;1850-03-16T12:00:00.000000000&#x27;, ..., &#x27;2024-11-16T00:00:00.000000000&#x27;,\n       &#x27;2024-12-16T12:00:00.000000000&#x27;, &#x27;2025-01-16T12:00:00.000000000&#x27;],\n      shape=(2101,), dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>latitude</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-731950db-c46b-46c5-b2f3-63f03856613d' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-731950db-c46b-46c5-b2f3-63f03856613d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-01584755-9ebc-41ff-93c1-5371b77d472c' class='xr-var-data-in' type='checkbox'><label for='data-01584755-9ebc-41ff-93c1-5371b77d472c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>bounds :</span></dt><dd>latitude_bnds</dd><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>long_name :</span></dt><dd>latitude</dd></dl></div><div class='xr-var-data'><pre>[1 values with dtype=float64]</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>longitude</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-e86bad9a-121f-480e-8d1c-1d321658ee45' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e86bad9a-121f-480e-8d1c-1d321658ee45' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e9667bb9-f2cb-4b67-a6ea-9ea39e3a72a6' class='xr-var-data-in' type='checkbox'><label for='data-e9667bb9-f2cb-4b67-a6ea-9ea39e3a72a6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>bounds :</span></dt><dd>longitude_bnds</dd><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>long_name :</span></dt><dd>longitude</dd></dl></div><div class='xr-var-data'><pre>[1 values with dtype=float64]</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>realization</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-a14f387e-582c-4e34-bab7-bb5367499d54' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a14f387e-582c-4e34-bab7-bb5367499d54' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-cb1df656-2f65-4cc6-aed2-6da5b3b8239a' class='xr-var-data-in' type='checkbox'><label for='data-cb1df656-2f65-4cc6-aed2-6da5b3b8239a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>bounds :</span></dt><dd>realization_bnds</dd><dt><span>units :</span></dt><dd>1</dd><dt><span>standard_name :</span></dt><dd>realization</dd></dl></div><div class='xr-var-data'><pre>[1 values with dtype=int64]</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-d79db36a-8fc7-4aed-99b7-31816afbf27a' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d79db36a-8fc7-4aed-99b7-31816afbf27a' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>blended air_temperature_anomaly over land with sea_water_temperature_anomaly</dd><dt><span>units :</span></dt><dd>K</dd><dt><span>cell_methods :</span></dt><dd>area: mean (interval: 5.0 degrees_north 5.0 degrees_east) time: mean (interval: 1 month) longitude: latitude: mean latitude: mean realization: mean</dd></dl></div></li></ul></div></div>","content_type":"text/html"}}}],"key":"jTSjSKveVE"}],"key":"CUue5dMCMv"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Some helpful functions","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nj4qR4xaH5"}],"identifier":"some-helpful-functions","label":"Some helpful functions","html_id":"some-helpful-functions","implicit":true,"key":"b6ige4LDbp"}],"key":"pF2Na2SRd9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def drop_all_bounds(ds):\n    drop_vars = [vname for vname in ds.coords\n                 if (('_bounds') in vname ) or ('_bnds') in vname]\n    return ds.drop_vars(drop_vars)\n\ndef open_dset(df):\n    assert len(df) == 1\n    mapper = fsspec.get_mapper(df.zstore.values[0])\n    #path = df.zstore.values[0][7:]+\".zmetadata\"\n    ds = xr.open_zarr(mapper, consolidated=True)\n    return drop_all_bounds(ds)\n\ndef open_delayed(df):\n    return dask.delayed(open_dset)(df)\n\nfrom collections import defaultdict\ndsets = defaultdict(dict)\n\nfor group, df in col_subset.df.groupby(by=['source_id', 'experiment_id']):\n    dsets[group[0]][group[1]] = open_delayed(df)","key":"KeqWligrI6"},{"type":"output","id":"WCVgdp2Z9jCOzIy5Dx2aR","data":[],"key":"rb2ASCrsPv"}],"key":"Px0yKTbVma"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dsets_ = dask.compute(dict(dsets))[0]","key":"AD7E1a3rTB"},{"type":"output","id":"K2ApImpsDBqg12f1BoISU","data":[{"output_type":"stream","name":"stderr","text":"2025-10-31 01:44:30,388 - distributed.worker - ERROR - Compute Failed\nKey:       open_dset-fbe8f102-55b2-4eb5-85fe-1de26083bb4d\nState:     executing\nTask:  <Task 'open_dset-fbe8f102-55b2-4eb5-85fe-1de26083bb4d' open_dset(...)>\nException: 'ClientPayloadError(\"Response payload is not completed: <ContentLengthError: 400, message=\\'Not enough data to satisfy content length header.\\'>\")'\nTraceback: '  File \"/tmp/ipykernel_4035/2106968831.py\", line 10, in open_dset\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/zarr.py\", line 1586, in open_zarr\\n    ds = open_dataset(\\n         ^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/api.py\", line 602, in open_dataset\\n    ds = _dataset_from_backend_dataset(\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/api.py\", line 292, in _dataset_from_backend_dataset\\n    ds = _maybe_create_default_indexes(backend_ds)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/api.py\", line 268, in _maybe_create_default_indexes\\n    return ds.assign_coords(Coordinates(to_index))\\n                            ^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/coordinates.py\", line 315, in __init__\\n    index, index_vars = create_default_index_implicit(var, list(coords))\\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexes.py\", line 1638, in create_default_index_implicit\\n    index = PandasIndex.from_variables(dim_var, options={})\\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexes.py\", line 720, in from_variables\\n    data = var._data if isinstance(var._data, PandasIndexingAdapter) else var.data  # type: ignore[redundant-expr]\\n                                                                          ^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/variable.py\", line 456, in data\\n    duck_array = self._data.get_duck_array()\\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexing.py\", line 897, in get_duck_array\\n    return self.array.get_duck_array()\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexing.py\", line 737, in get_duck_array\\n    array = self.array[self.key]\\n            ~~~~~~~~~~^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/zarr.py\", line 262, in __getitem__\\n    return indexing.explicit_indexing_adapter(\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexing.py\", line 1129, in explicit_indexing_adapter\\n    result = raw_indexing_method(raw_key.tuple)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/zarr.py\", line 225, in _getitem\\n    return self._array[key]\\n           ~~~~~~~~~~~^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py\", line 800, in __getitem__\\n    result = self.get_basic_selection(pure_selection, fields=fields)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py\", line 926, in get_basic_selection\\n    return self._get_basic_selection_nd(selection=selection, out=out, fields=fields)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py\", line 968, in _get_basic_selection_nd\\n    return self._get_selection(indexer=indexer, out=out, fields=fields)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py\", line 1343, in _get_selection\\n    self._chunk_getitems(\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py\", line 2179, in _chunk_getitems\\n    cdatas = self.chunk_store.getitems(ckeys, contexts=contexts)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/storage.py\", line 1435, in getitems\\n    raise v\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/asyn.py\", line 244, in _run_coro\\n    return await asyncio.wait_for(coro, timeout=timeout), i\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/asyncio/tasks.py\", line 520, in wait_for\\n    return await fut\\n           ^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/implementations/http.py\", line 246, in _cat_file\\n    out = await r.read()\\n          ^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/aiohttp/client_reqrep.py\", line 693, in read\\n    self._body = await self.content.read()\\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/aiohttp/streams.py\", line 426, in read\\n    block = await self.readany()\\n            ^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/aiohttp/streams.py\", line 448, in readany\\n    await self._wait(\"readany\")\\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/aiohttp/streams.py\", line 355, in _wait\\n    await waiter\\n'\n\n"},{"output_type":"stream","name":"stderr","text":"2025-10-31 01:44:30,619 - distributed.protocol.pickle - ERROR - Failed to serialize 504, message='Gateway Timeout', url='https://osdfcache.ligo.caltech.edu:8443/aws-opendata/us-west-2/cmip6-pds/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3-Veg-LR/historical/r1i1p1f1/Amon/tas/gr/v20200217/.zmetadata'.\nTraceback (most recent call last):\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/distributed/worker.py\", line 2986, in _run_task_simple\n    result = task(data)\n             ^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/dask/_task_spec.py\", line 759, in __call__\n    return self.func(*new_argspec)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/ipykernel_4035/2106968831.py\", line 10, in open_dset\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/zarr.py\", line 1586, in open_zarr\n    ds = open_dataset(\n         ^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/api.py\", line 596, in open_dataset\n    backend_ds = backend.open_dataset(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/zarr.py\", line 1660, in open_dataset\n    store = ZarrStore.open_group(\n            ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/zarr.py\", line 714, in open_group\n    ) = _get_open_params(\n        ^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/zarr.py\", line 1864, in _get_open_params\n    zarr_root_group = zarr.open_consolidated(store, **open_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/convenience.py\", line 1360, in open_consolidated\n    meta_store = ConsolidatedStoreClass(store, metadata_key=metadata_key)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/storage.py\", line 3046, in __init__\n    meta = json_loads(self.store[metadata_key])\n                      ~~~~~~~~~~^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/storage.py\", line 1446, in __getitem__\n    return self.map[key]\n           ~~~~~~~~^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/mapping.py\", line 155, in __getitem__\n    result = self.fs.cat(k)\n             ^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/asyn.py\", line 118, in wrapper\n    return sync(self.loop, func, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/asyn.py\", line 103, in sync\n    raise return_result\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/asyn.py\", line 56, in _runner\n    result[0] = await coro\n                ^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/pelicanfs/core.py\", line 1008, in wrapper\n    result = await func(self, data_url, *args[1:], **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/pelicanfs/core.py\", line 1052, in _cat\n    results = await self.http_file_system._cat(path, recursive, on_error, batch_size, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/asyn.py\", line 464, in _cat\n    raise ex\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/asyn.py\", line 244, in _run_coro\n    return await asyncio.wait_for(coro, timeout=timeout), i\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/asyncio/tasks.py\", line 520, in wait_for\n    return await fut\n           ^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/implementations/http.py\", line 247, in _cat_file\n    self._raise_not_found_for_status(r, url)\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/implementations/http.py\", line 230, in _raise_not_found_for_status\n    response.raise_for_status()\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/aiohttp/client_reqrep.py\", line 636, in raise_for_status\n    raise ClientResponseError(\naiohttp.client_exceptions.ClientResponseError: 504, message='Gateway Timeout', url='https://osdfcache.ligo.caltech.edu:8443/aws-opendata/us-west-2/cmip6-pds/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3-Veg-LR/historical/r1i1p1f1/Amon/tas/gr/v20200217/.zmetadata'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/distributed/protocol/pickle.py\", line 63, in dumps\n    result = pickle.dumps(x, **dump_kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: can't pickle multidict._multidict.CIMultiDictProxy objects\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/distributed/protocol/pickle.py\", line 68, in dumps\n    pickler.dump(x)\nTypeError: can't pickle multidict._multidict.CIMultiDictProxy objects\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/distributed/protocol/pickle.py\", line 80, in dumps\n    result = cloudpickle.dumps(x, **dump_kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/cloudpickle/cloudpickle.py\", line 1537, in dumps\n    cp.dump(obj)\n  File \"/home/runner/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/cloudpickle/cloudpickle.py\", line 1303, in dump\n    return super().dump(obj)\n           ^^^^^^^^^^^^^^^^^\nTypeError: can't pickle multidict._multidict.CIMultiDictProxy objects\n"},{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mContentLengthError\u001b[39m                        Traceback (most recent call last)\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/aiohttp/client_proto.py:144\u001b[39m, in \u001b[36mconnection_lost\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    143\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m144\u001b[39m     uncompleted = \u001b[38;5;28mself\u001b[39m._parser.feed_eof()\n\u001b[32m    145\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m underlying_exc:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/aiohttp/_http_parser.pyx:509\u001b[39m, in \u001b[36maiohttp._http_parser.HttpParser.feed_eof\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    508\u001b[39m elif self._cparser.flags & cparser.F_CONTENT_LENGTH:\n\u001b[32m--> \u001b[39m\u001b[32m509\u001b[39m     raise ContentLengthError(\n\u001b[32m    510\u001b[39m         \"Not enough data to satisfy content length header.\")\n\n\u001b[31mContentLengthError\u001b[39m: 400, message:\n  Not enough data to satisfy content length header.\n\nThe above exception was the direct cause of the following exception:\n\n\u001b[31mClientPayloadError\u001b[39m                        Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[10]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m dsets_ = \u001b[43mdask\u001b[49m\u001b[43m.\u001b[49m\u001b[43mcompute\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mdict\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mdsets\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m[\u001b[32m0\u001b[39m]\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/dask/base.py:681\u001b[39m, in \u001b[36mcompute\u001b[39m\u001b[34m(traverse, optimize_graph, scheduler, get, *args, **kwargs)\u001b[39m\n\u001b[32m    678\u001b[39m     expr = expr.optimize()\n\u001b[32m    679\u001b[39m     keys = \u001b[38;5;28mlist\u001b[39m(flatten(expr.__dask_keys__()))\n\u001b[32m--> \u001b[39m\u001b[32m681\u001b[39m     results = \u001b[43mschedule\u001b[49m\u001b[43m(\u001b[49m\u001b[43mexpr\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkeys\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    683\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m repack(results)\n\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[9]\u001b[39m\u001b[32m, line 10\u001b[39m, in \u001b[36mopen_dset\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m      8\u001b[39m mapper = fsspec.get_mapper(df.zstore.values[\u001b[32m0\u001b[39m])\n\u001b[32m      9\u001b[39m \u001b[38;5;66;03m#path = df.zstore.values[0][7:]+\".zmetadata\"\u001b[39;00m\n\u001b[32m---> \u001b[39m\u001b[32m10\u001b[39m ds = xr.open_zarr(mapper, consolidated=\u001b[38;5;28;01mTrue\u001b[39;00m)\n\u001b[32m     11\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m drop_all_bounds(ds)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/zarr.py:1586\u001b[39m, in \u001b[36mopen_zarr\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m   1572\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(\n\u001b[32m   1573\u001b[39m         \u001b[33m\"\u001b[39m\u001b[33mopen_zarr() got unexpected keyword arguments \u001b[39m\u001b[33m\"\u001b[39m + \u001b[33m\"\u001b[39m\u001b[33m,\u001b[39m\u001b[33m\"\u001b[39m.join(kwargs.keys())\n\u001b[32m   1574\u001b[39m     )\n\u001b[32m   1576\u001b[39m backend_kwargs = {\n\u001b[32m   1577\u001b[39m     \u001b[33m\"\u001b[39m\u001b[33msynchronizer\u001b[39m\u001b[33m\"\u001b[39m: synchronizer,\n\u001b[32m   1578\u001b[39m     \u001b[33m\"\u001b[39m\u001b[33mconsolidated\u001b[39m\u001b[33m\"\u001b[39m: consolidated,\n\u001b[32m   (...)\u001b[39m\u001b[32m   1583\u001b[39m     \u001b[33m\"\u001b[39m\u001b[33mzarr_format\u001b[39m\u001b[33m\"\u001b[39m: zarr_format,\n\u001b[32m   1584\u001b[39m }\n\u001b[32m-> \u001b[39m\u001b[32m1586\u001b[39m ds = open_dataset(\n\u001b[32m   1587\u001b[39m     filename_or_obj=store,\n\u001b[32m   1588\u001b[39m     group=group,\n\u001b[32m   1589\u001b[39m     decode_cf=decode_cf,\n\u001b[32m   1590\u001b[39m     mask_and_scale=mask_and_scale,\n\u001b[32m   1591\u001b[39m     decode_times=decode_times,\n\u001b[32m   1592\u001b[39m     concat_characters=concat_characters,\n\u001b[32m   1593\u001b[39m     decode_coords=decode_coords,\n\u001b[32m   1594\u001b[39m     engine=\u001b[33m\"\u001b[39m\u001b[33mzarr\u001b[39m\u001b[33m\"\u001b[39m,\n\u001b[32m   1595\u001b[39m     chunks=chunks,\n\u001b[32m   1596\u001b[39m     drop_variables=drop_variables,\n\u001b[32m   1597\u001b[39m     create_default_indexes=create_default_indexes,\n\u001b[32m   1598\u001b[39m     chunked_array_type=chunked_array_type,\n\u001b[32m   1599\u001b[39m     from_array_kwargs=from_array_kwargs,\n\u001b[32m   1600\u001b[39m     backend_kwargs=backend_kwargs,\n\u001b[32m   1601\u001b[39m     decode_timedelta=decode_timedelta,\n\u001b[32m   1602\u001b[39m     use_cftime=use_cftime,\n\u001b[32m   1603\u001b[39m     zarr_version=zarr_version,\n\u001b[32m   1604\u001b[39m     use_zarr_fill_value_as_mask=use_zarr_fill_value_as_mask,\n\u001b[32m   1605\u001b[39m )\n\u001b[32m   1606\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m ds\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/api.py:602\u001b[39m, in \u001b[36mopen_dataset\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    595\u001b[39m overwrite_encoded_chunks = kwargs.pop(\u001b[33m\"\u001b[39m\u001b[33moverwrite_encoded_chunks\u001b[39m\u001b[33m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m)\n\u001b[32m    596\u001b[39m backend_ds = backend.open_dataset(\n\u001b[32m    597\u001b[39m     filename_or_obj,\n\u001b[32m    598\u001b[39m     drop_variables=drop_variables,\n\u001b[32m    599\u001b[39m     **decoders,\n\u001b[32m    600\u001b[39m     **kwargs,\n\u001b[32m    601\u001b[39m )\n\u001b[32m--> \u001b[39m\u001b[32m602\u001b[39m ds = _dataset_from_backend_dataset(\n\u001b[32m    603\u001b[39m     backend_ds,\n\u001b[32m    604\u001b[39m     filename_or_obj,\n\u001b[32m    605\u001b[39m     engine,\n\u001b[32m    606\u001b[39m     chunks,\n\u001b[32m    607\u001b[39m     cache,\n\u001b[32m    608\u001b[39m     overwrite_encoded_chunks,\n\u001b[32m    609\u001b[39m     inline_array,\n\u001b[32m    610\u001b[39m     chunked_array_type,\n\u001b[32m    611\u001b[39m     from_array_kwargs,\n\u001b[32m    612\u001b[39m     drop_variables=drop_variables,\n\u001b[32m    613\u001b[39m     create_default_indexes=create_default_indexes,\n\u001b[32m    614\u001b[39m     **decoders,\n\u001b[32m    615\u001b[39m     **kwargs,\n\u001b[32m    616\u001b[39m )\n\u001b[32m    617\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m ds\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/api.py:292\u001b[39m, in \u001b[36m_dataset_from_backend_dataset\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    289\u001b[39m _protect_dataset_variables_inplace(backend_ds, cache)\n\u001b[32m    291\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m create_default_indexes:\n\u001b[32m--> \u001b[39m\u001b[32m292\u001b[39m     ds = _maybe_create_default_indexes(backend_ds)\n\u001b[32m    293\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    294\u001b[39m     ds = backend_ds\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/api.py:268\u001b[39m, in \u001b[36m_maybe_create_default_indexes\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    262\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34m_maybe_create_default_indexes\u001b[39m(ds):\n\u001b[32m    263\u001b[39m     to_index = {\n\u001b[32m    264\u001b[39m         name: coord.variable\n\u001b[32m    265\u001b[39m         \u001b[38;5;28;01mfor\u001b[39;00m name, coord \u001b[38;5;129;01min\u001b[39;00m ds.coords.items()\n\u001b[32m    266\u001b[39m         \u001b[38;5;28;01mif\u001b[39;00m coord.dims == (name,) \u001b[38;5;129;01mand\u001b[39;00m name \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ds.xindexes\n\u001b[32m    267\u001b[39m     }\n\u001b[32m--> \u001b[39m\u001b[32m268\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m ds.assign_coords(Coordinates(to_index))\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/coordinates.py:315\u001b[39m, in \u001b[36m__init__\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    313\u001b[39m var = as_variable(data, name=name, auto_convert=\u001b[38;5;28;01mFalse\u001b[39;00m)\n\u001b[32m    314\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m var.dims == (name,) \u001b[38;5;129;01mand\u001b[39;00m indexes \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m315\u001b[39m     index, index_vars = create_default_index_implicit(var, \u001b[38;5;28mlist\u001b[39m(coords))\n\u001b[32m    316\u001b[39m     default_indexes.update(\u001b[38;5;28mdict\u001b[39m.fromkeys(index_vars, index))\n\u001b[32m    317\u001b[39m     variables.update(index_vars)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexes.py:1638\u001b[39m, in \u001b[36mcreate_default_index_implicit\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m   1636\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m   1637\u001b[39m     dim_var = {name: dim_variable}\n\u001b[32m-> \u001b[39m\u001b[32m1638\u001b[39m     index = PandasIndex.from_variables(dim_var, options={})\n\u001b[32m   1639\u001b[39m     index_vars = index.create_variables(dim_var)\n\u001b[32m   1641\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m index, index_vars\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexes.py:720\u001b[39m, in \u001b[36mfrom_variables\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    712\u001b[39m dim = var.dims[\u001b[32m0\u001b[39m]\n\u001b[32m    714\u001b[39m \u001b[38;5;66;03m# TODO: (benbovy - explicit indexes): add __index__ to ExplicitlyIndexesNDArrayMixin?\u001b[39;00m\n\u001b[32m    715\u001b[39m \u001b[38;5;66;03m# this could be eventually used by Variable.to_index() and would remove the need to perform\u001b[39;00m\n\u001b[32m    716\u001b[39m \u001b[38;5;66;03m# the checks below.\u001b[39;00m\n\u001b[32m    717\u001b[39m \n\u001b[32m    718\u001b[39m \u001b[38;5;66;03m# preserve wrapped pd.Index (if any)\u001b[39;00m\n\u001b[32m    719\u001b[39m \u001b[38;5;66;03m# accessing `.data` can load data from disk, so we only access if needed\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m720\u001b[39m data = var._data \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(var._data, PandasIndexingAdapter) \u001b[38;5;28;01melse\u001b[39;00m var.data  \u001b[38;5;66;03m# type: ignore[redundant-expr]\u001b[39;00m\n\u001b[32m    721\u001b[39m \u001b[38;5;66;03m# multi-index level variable: get level index\u001b[39;00m\n\u001b[32m    722\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(var._data, PandasMultiIndexingAdapter):\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/variable.py:456\u001b[39m, in \u001b[36mdata\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    454\u001b[39m     duck_array = \u001b[38;5;28mself\u001b[39m._data.array\n\u001b[32m    455\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(\u001b[38;5;28mself\u001b[39m._data, indexing.ExplicitlyIndexed):\n\u001b[32m--> \u001b[39m\u001b[32m456\u001b[39m     duck_array = \u001b[38;5;28mself\u001b[39m._data.get_duck_array()\n\u001b[32m    457\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m is_duck_array(\u001b[38;5;28mself\u001b[39m._data):\n\u001b[32m    458\u001b[39m     duck_array = \u001b[38;5;28mself\u001b[39m._data\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexing.py:897\u001b[39m, in \u001b[36mget_duck_array\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    896\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mget_duck_array\u001b[39m(\u001b[38;5;28mself\u001b[39m):\n\u001b[32m--> \u001b[39m\u001b[32m897\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m.array.get_duck_array()\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexing.py:737\u001b[39m, in \u001b[36mget_duck_array\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    734\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxarray\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01mbackends\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01mcommon\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m BackendArray\n\u001b[32m    736\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(\u001b[38;5;28mself\u001b[39m.array, BackendArray):\n\u001b[32m--> \u001b[39m\u001b[32m737\u001b[39m     array = \u001b[38;5;28mself\u001b[39m.array[\u001b[38;5;28mself\u001b[39m.key]\n\u001b[32m    738\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    739\u001b[39m     array = apply_indexer(\u001b[38;5;28mself\u001b[39m.array, \u001b[38;5;28mself\u001b[39m.key)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/zarr.py:262\u001b[39m, in \u001b[36m__getitem__\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    260\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(key, indexing.OuterIndexer):\n\u001b[32m    261\u001b[39m     method = \u001b[38;5;28mself\u001b[39m._oindex\n\u001b[32m--> \u001b[39m\u001b[32m262\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m indexing.explicit_indexing_adapter(\n\u001b[32m    263\u001b[39m     key, array.shape, indexing.IndexingSupport.VECTORIZED, method\n\u001b[32m    264\u001b[39m )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexing.py:1129\u001b[39m, in \u001b[36mexplicit_indexing_adapter\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m   1107\u001b[39m \u001b[38;5;250m\u001b[39m\u001b[33;03m\"\"\"Support explicit indexing by delegating to a raw indexing method.\u001b[39;00m\n\u001b[32m   1108\u001b[39m \n\u001b[32m   1109\u001b[39m \u001b[33;03mOuter and/or vectorized indexers are supported by indexing a second time\u001b[39;00m\n\u001b[32m   (...)\u001b[39m\u001b[32m   1126\u001b[39m \u001b[33;03mIndexing result, in the form of a duck numpy-array.\u001b[39;00m\n\u001b[32m   1127\u001b[39m \u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m   1128\u001b[39m raw_key, numpy_indices = decompose_indexer(key, shape, indexing_support)\n\u001b[32m-> \u001b[39m\u001b[32m1129\u001b[39m result = raw_indexing_method(raw_key.tuple)\n\u001b[32m   1130\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m numpy_indices.tuple:\n\u001b[32m   1131\u001b[39m     \u001b[38;5;66;03m# index the loaded duck array\u001b[39;00m\n\u001b[32m   1132\u001b[39m     indexable = as_indexable(result)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/zarr.py:225\u001b[39m, in \u001b[36m_getitem\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    224\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34m_getitem\u001b[39m(\u001b[38;5;28mself\u001b[39m, key):\n\u001b[32m--> \u001b[39m\u001b[32m225\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m._array[key]\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py:800\u001b[39m, in \u001b[36m__getitem__\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    798\u001b[39m     result = \u001b[38;5;28mself\u001b[39m.get_orthogonal_selection(pure_selection, fields=fields)\n\u001b[32m    799\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m800\u001b[39m     result = \u001b[38;5;28mself\u001b[39m.get_basic_selection(pure_selection, fields=fields)\n\u001b[32m    801\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m result\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py:926\u001b[39m, in \u001b[36mget_basic_selection\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    924\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m._get_basic_selection_zd(selection=selection, out=out, fields=fields)\n\u001b[32m    925\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m926\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m._get_basic_selection_nd(selection=selection, out=out, fields=fields)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py:968\u001b[39m, in \u001b[36m_get_basic_selection_nd\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    962\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34m_get_basic_selection_nd\u001b[39m(\u001b[38;5;28mself\u001b[39m, selection, out=\u001b[38;5;28;01mNone\u001b[39;00m, fields=\u001b[38;5;28;01mNone\u001b[39;00m):\n\u001b[32m    963\u001b[39m     \u001b[38;5;66;03m# implementation of basic selection for array with at least one dimension\u001b[39;00m\n\u001b[32m    964\u001b[39m \n\u001b[32m    965\u001b[39m     \u001b[38;5;66;03m# setup indexer\u001b[39;00m\n\u001b[32m    966\u001b[39m     indexer = BasicIndexer(selection, \u001b[38;5;28mself\u001b[39m)\n\u001b[32m--> \u001b[39m\u001b[32m968\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m._get_selection(indexer=indexer, out=out, fields=fields)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py:1343\u001b[39m, in \u001b[36m_get_selection\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m   1340\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m math.prod(out_shape) > \u001b[32m0\u001b[39m:\n\u001b[32m   1341\u001b[39m     \u001b[38;5;66;03m# allow storage to get multiple items at once\u001b[39;00m\n\u001b[32m   1342\u001b[39m     lchunk_coords, lchunk_selection, lout_selection = \u001b[38;5;28mzip\u001b[39m(*indexer)\n\u001b[32m-> \u001b[39m\u001b[32m1343\u001b[39m     \u001b[38;5;28mself\u001b[39m._chunk_getitems(\n\u001b[32m   1344\u001b[39m         lchunk_coords,\n\u001b[32m   1345\u001b[39m         lchunk_selection,\n\u001b[32m   1346\u001b[39m         out,\n\u001b[32m   1347\u001b[39m         lout_selection,\n\u001b[32m   1348\u001b[39m         drop_axes=indexer.drop_axes,\n\u001b[32m   1349\u001b[39m         fields=fields,\n\u001b[32m   1350\u001b[39m     )\n\u001b[32m   1351\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m out.shape:\n\u001b[32m   1352\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m out\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py:2179\u001b[39m, in \u001b[36m_chunk_getitems\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m   2177\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(\u001b[38;5;28mself\u001b[39m._meta_array, np.ndarray):\n\u001b[32m   2178\u001b[39m         contexts = ConstantMap(ckeys, constant=Context(meta_array=\u001b[38;5;28mself\u001b[39m._meta_array))\n\u001b[32m-> \u001b[39m\u001b[32m2179\u001b[39m     cdatas = \u001b[38;5;28mself\u001b[39m.chunk_store.getitems(ckeys, contexts=contexts)\n\u001b[32m   2181\u001b[39m \u001b[38;5;28;01mfor\u001b[39;00m ckey, chunk_select, out_select \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mzip\u001b[39m(ckeys, lchunk_selection, lout_selection):\n\u001b[32m   2182\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m ckey \u001b[38;5;129;01min\u001b[39;00m cdatas:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/storage.py:1435\u001b[39m, in \u001b[36mgetitems\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m   1432\u001b[39m     \u001b[38;5;28;01mcontinue\u001b[39;00m\n\u001b[32m   1433\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(v, \u001b[38;5;167;01mException\u001b[39;00m):\n\u001b[32m   1434\u001b[39m     \u001b[38;5;66;03m# Raise any other exception\u001b[39;00m\n\u001b[32m-> \u001b[39m\u001b[32m1435\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m v\n\u001b[32m   1436\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m   1437\u001b[39m     \u001b[38;5;66;03m# The function calling this method may not recognize the transformed\u001b[39;00m\n\u001b[32m   1438\u001b[39m     \u001b[38;5;66;03m# keys, so we send the values returned by self.map.getitems back into\u001b[39;00m\n\u001b[32m   1439\u001b[39m     \u001b[38;5;66;03m# the original key space.\u001b[39;00m\n\u001b[32m   1440\u001b[39m     results[keys_transformed[k]] = v\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/asyn.py:244\u001b[39m, in \u001b[36m_run_coro\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    242\u001b[39m \u001b[38;5;28;01masync\u001b[39;00m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34m_run_coro\u001b[39m(coro, i):\n\u001b[32m    243\u001b[39m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m244\u001b[39m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m asyncio.wait_for(coro, timeout=timeout), i\n\u001b[32m    245\u001b[39m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[32m    246\u001b[39m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m return_exceptions:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/asyncio/tasks.py:520\u001b[39m, in \u001b[36mwait_for\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    517\u001b[39m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTimeoutError\u001b[39;00m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mexc\u001b[39;00m\n\u001b[32m    519\u001b[39m \u001b[38;5;28;01masync\u001b[39;00m \u001b[38;5;28;01mwith\u001b[39;00m timeouts.timeout(timeout):\n\u001b[32m--> \u001b[39m\u001b[32m520\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m fut\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/implementations/http.py:246\u001b[39m, in \u001b[36m_cat_file\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    244\u001b[39m session = \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m.set_session()\n\u001b[32m    245\u001b[39m \u001b[38;5;28;01masync\u001b[39;00m \u001b[38;5;28;01mwith\u001b[39;00m session.get(\u001b[38;5;28mself\u001b[39m.encode_url(url), **kw) \u001b[38;5;28;01mas\u001b[39;00m r:\n\u001b[32m--> \u001b[39m\u001b[32m246\u001b[39m     out = \u001b[38;5;28;01mawait\u001b[39;00m r.read()\n\u001b[32m    247\u001b[39m     \u001b[38;5;28mself\u001b[39m._raise_not_found_for_status(r, url)\n\u001b[32m    248\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m out\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/aiohttp/client_reqrep.py:693\u001b[39m, in \u001b[36mread\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    691\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m._body \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m    692\u001b[39m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m693\u001b[39m         \u001b[38;5;28mself\u001b[39m._body = \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m.content.read()\n\u001b[32m    694\u001b[39m         \u001b[38;5;28;01mfor\u001b[39;00m trace \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m._traces:\n\u001b[32m    695\u001b[39m             \u001b[38;5;28;01mawait\u001b[39;00m trace.send_response_chunk_received(\n\u001b[32m    696\u001b[39m                 \u001b[38;5;28mself\u001b[39m.method, \u001b[38;5;28mself\u001b[39m.url, \u001b[38;5;28mself\u001b[39m._body\n\u001b[32m    697\u001b[39m             )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/aiohttp/streams.py:426\u001b[39m, in \u001b[36mread\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    424\u001b[39m blocks = []\n\u001b[32m    425\u001b[39m \u001b[38;5;28;01mwhile\u001b[39;00m \u001b[38;5;28;01mTrue\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m426\u001b[39m     block = \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m.readany()\n\u001b[32m    427\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m block:\n\u001b[32m    428\u001b[39m         \u001b[38;5;28;01mbreak\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/aiohttp/streams.py:448\u001b[39m, in \u001b[36mreadany\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    444\u001b[39m \u001b[38;5;66;03m# TODO: should be `if` instead of `while`\u001b[39;00m\n\u001b[32m    445\u001b[39m \u001b[38;5;66;03m# because waiter maybe triggered on chunk end,\u001b[39;00m\n\u001b[32m    446\u001b[39m \u001b[38;5;66;03m# without feeding any data\u001b[39;00m\n\u001b[32m    447\u001b[39m \u001b[38;5;28;01mwhile\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mself\u001b[39m._buffer \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mself\u001b[39m._eof:\n\u001b[32m--> \u001b[39m\u001b[32m448\u001b[39m     \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._wait(\u001b[33m\"\u001b[39m\u001b[33mreadany\u001b[39m\u001b[33m\"\u001b[39m)\n\u001b[32m    450\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m._read_nowait(-\u001b[32m1\u001b[39m)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/aiohttp/streams.py:355\u001b[39m, in \u001b[36m_wait\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    353\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m    354\u001b[39m     \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28mself\u001b[39m._timer:\n\u001b[32m--> \u001b[39m\u001b[32m355\u001b[39m         \u001b[38;5;28;01mawait\u001b[39;00m waiter\n\u001b[32m    356\u001b[39m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[32m    357\u001b[39m     \u001b[38;5;28mself\u001b[39m._waiter = \u001b[38;5;28;01mNone\u001b[39;00m\n\n\u001b[31mClientPayloadError\u001b[39m: Response payload is not completed: <ContentLengthError: 400, message='Not enough data to satisfy content length header.'>","ename":"ClientPayloadError","evalue":"Response payload is not completed: <ContentLengthError: 400, message='Not enough data to satisfy content length header.'>"}],"key":"zQLczSuUAK"}],"key":"xgxuesVOZ5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#calculate global means\ndef get_lat_name(ds):\n    for lat_name in ['lat', 'latitude']:\n        if lat_name in ds.coords:\n            return lat_name\n    raise RuntimeError(\"Couldn't find a latitude coordinate\")\n\ndef global_mean(ds):\n    lat = ds[get_lat_name(ds)]\n    weight = np.cos(np.deg2rad(lat))\n    weight /= weight.mean()\n    other_dims = set(ds.dims) - {'time'}\n    return (ds * weight).mean(other_dims)","key":"imbH8FJACR"},{"type":"output","id":"JLBBskktpdqgeO7bUbonk","data":[],"key":"sexwoqq4FB"}],"key":"udmZanxHCO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#calculate global means\ndef get_lat_name(ds):\n    for lat_name in ['lat', 'latitude']:\n        if lat_name in ds.coords:\n            return lat_name\n    raise RuntimeError(\"Couldn't find a latitude coordinate\")\n\ndef global_mean(ds):\n    lat = ds[get_lat_name(ds)]\n    weight = np.cos(np.deg2rad(lat))\n    weight /= weight.mean()\n    other_dims = set(ds.dims) - {'time'}\n    return (ds * weight).mean(other_dims)","key":"mOPJI31jhj"},{"type":"output","id":"AE0rFeBvj1jW6xB1gCbJL","data":[],"key":"VxEDZ3ZgCl"}],"key":"BHpiAiuC5L"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"GMST computation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Sfu8uqaUdj"}],"identifier":"gmst-computation","label":"GMST computation","html_id":"gmst-computation","implicit":true,"key":"GfYAA9xvLt"}],"key":"eFSs2yYfjz"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"expt_da = xr.DataArray(expts, dims='experiment_id', name='experiment_id',\n                       coords={'experiment_id': expts})\n\ndsets_aligned = {}\n\nfor k, v in tqdm(dsets_.items()):\n    expt_dsets = v.values()\n    if any([d is None for d in expt_dsets]):\n        print(f\"Missing experiment for {k}\")\n        continue\n\n    for ds in expt_dsets:\n        ds.coords['year'] = ds.time.dt.year\n\n    # workaround for\n    # https://github.com/pydata/xarray/issues/2237#issuecomment-620961663\n    dsets_ann_mean = [v[expt].pipe(global_mean).swap_dims({'time': 'year'})\n                             .drop_vars('time').coarsen(year=12).mean()\n                      for expt in expts]\n\n    # align everything with the 4xCO2 experiment\n    dsets_aligned[k] = xr.concat(dsets_ann_mean, join='outer',dim=expt_da)","key":"pJfiu83dqt"},{"type":"output","id":"Ebi7C64XOVoE2ycCNmuWM","data":[],"key":"WbX5uqEaTS"}],"key":"pL2dmE9GHv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nwith progress.ProgressBar():\n    dsets_aligned_ = dask.compute(dsets_aligned)[0]","key":"ul0HeakDv4"},{"type":"output","id":"n1bqZRQWImtCnMsujaKpT","data":[],"key":"d5YBiOoHrf"}],"key":"fLECpmUP1t"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"source_ids = list(dsets_aligned_.keys())\nsource_da = xr.DataArray(source_ids, dims='source_id', name='source_id',\n                         coords={'source_id': source_ids})\n\nbig_ds = xr.concat([ds.reset_coords(drop=True)\n                    for ds in dsets_aligned_.values()],\n                    dim=source_da)\n\nbig_ds","key":"uHwGnSPe4y"},{"type":"output","id":"rhnmUqni5GOClPhnxUT4B","data":[],"key":"d0kEcYWzCU"}],"key":"X07vrYdWEf"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"hint","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint","key":"Yv2Zh6em1k"}],"key":"BdTI6itjTc"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Note that even though the variable is called tas, the DataArray big_ds actually has the global and annual mean of surface temperatures! If you are wondering why this is the case, take a look at all the functions that were applied to obtain dsets_ann_mean!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"KYQNODbfcE"}],"key":"sabf2lTMoD"}],"key":"T38tanaTOh"}],"key":"Le8RvpQbQA"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Compute annual mean temperatures anomalies of observational data\nobs_gmsta = obs_ds.resample(time='YS').mean(dim='time')\n# obs_gmsta","key":"p4x5EdhEpr"},{"type":"output","id":"CLDQdVl_1DpRgXvH-SOcs","data":[],"key":"Dg9IDAfk60"}],"key":"OnuUBbX7nV"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compute anomlaies and plot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kkiiibf7uJ"}],"identifier":"compute-anomlaies-and-plot","label":"Compute anomlaies and plot","html_id":"compute-anomlaies-and-plot","implicit":true,"key":"bmZ2pj5NAc"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We will compute the temperature anomalies w.r.t 1960-1990 baseline period","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ymt72Qraun"}],"key":"lo3RnpV4XH"}],"key":"AyfQICbwQg"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Convert xarray datasets to pandas dataframes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"s4TBgE7ncB"}],"key":"r7cEx1RQKa"}],"key":"KFiI4tArGD"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Use Seaborn to plot GMSTA","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"q40uzNq25N"}],"key":"SsLJWkTLgT"}],"key":"lGBWCmtRlU"}],"key":"MqDbPHIf5U"}],"key":"YJJJJFPgvU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"df_all = big_ds.to_dataframe().reset_index()\ndf_all.head()","key":"ktbbXT9x4Z"},{"type":"output","id":"J4xCiqbDybW9c7tKZWzHZ","data":[],"key":"AZaJblLtIl"}],"key":"M2ufZ02yLv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define the baseline period\nbaseline_df = df_all[(df_all[\"year\"] >= 1960) & (df_all[\"year\"] <= 1990)]\n\n# Compute the baseline mean\nbaseline_mean = baseline_df[\"tas\"].mean()\n\n# Compute anomalies\ndf_all[\"tas_anomaly\"] = df_all[\"tas\"] - baseline_mean\ndf_all","key":"EgidWr3YFe"},{"type":"output","id":"CKQjqMEdQhzC2VcmaCG3P","data":[],"key":"ivmvVNRzR0"}],"key":"zQs3YtcWW9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"obs_df = obs_gmsta.to_dataframe(name='tas_anomaly').reset_index()","key":"QvNpGdWYvs"},{"type":"output","id":"Vb35UhdAUjUxEAYKuZunB","data":[],"key":"tO2UYdKnTf"}],"key":"k7ko9YzZVa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Convert 'time' to 'year' (keeping only the year)\nobs_df['year'] = obs_df['time'].dt.year\n\n# Drop the original 'time' column since we extracted 'year'\nobs_df = obs_df[['year', 'tas_anomaly']]\nobs_df","key":"kZHJETAz4C"},{"type":"output","id":"tdFdOHJ2r-ezRInf0YzDG","data":[],"key":"zsTXcmT3Zv"}],"key":"xjIMpaUd3b"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Almost there! Let us now use seaborn to plot all the anomalies","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fCZURamtbj"}],"key":"qKUQMG7Gz3"}],"key":"dgQC7yQ0lT"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"g = sns.relplot(data=df_all, x=\"year\", y=\"tas_anomaly\",\n                hue='experiment_id', kind=\"line\", errorbar=\"sd\", aspect=2, palette=\"Set2\")  # Adjust the color palette)\n\n# Get the current axis from the FacetGrid\nax = g.ax\n\n# Overlay the observational data in red\nsns.lineplot(data=obs_df, x=\"year\", y=\"tas_anomaly\",color=\"red\", \n             linestyle=\"dashed\", linewidth=2,label=\"Observations\", ax=ax)\n\n# Adjust the legend to include observations\nax.legend(title=\"Experiment ID + Observations\")\n\n# Show the plot\nplt.show()","key":"guAxynbVdS"},{"type":"output","id":"YSpZ1m9kLL02rqH2Ize7L","data":[],"key":"b5mmu4yZ7k"}],"key":"qbNamntNN3"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"L4wDk0fq35"}],"key":"KQPVBcbKsU"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ul4Mw1fvpr"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"ktg5D4qwm8"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In this notebook, we used surface air temperature data from several CMIP6 models for the ‘historical’, ‘SSP245’ and ‘SSP370’ runs to compute Global Mean Surface Temperature Anomaly (GMSTA) relative to the 1960-1990 baseline period and compare it with anomalies computed from the HadCRUT monthly surface temperature dataset. We used a modified intake-ESM catalog and pelicanFS to ‘stream/download’ temperature data from two different OSDF origins. The CMIP6 model data was streamed from the AWS OpenData origin in the us-west-2 region and the observational data was streamed from NCAR’s OSDF origin.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"DY3QTyOr8O"}],"key":"K86dFrBA5D"}],"key":"I8nN1o3GVp"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QucYwB07AK"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"HpM2TgdTjg"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://gallery.pangeo.io/repos/pangeo-gallery/cmip6/global_mean_surface_temp.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Original notebook","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"AWT4oemJ71"}],"urlSource":"https://gallery.pangeo.io/repos/pangeo-gallery/cmip6/global_mean_surface_temp.html","key":"pN2bvDqANp"},{"type":"text","value":" in the Pangeo Gallery by Henri Drake and Ryan Abernathey","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"REIJsSYjUP"}],"key":"ufhyn6FQY9"}],"key":"shz8G5xeQl"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://projectpythia.org/cmip6-cookbook/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"CMIP6 cookbook","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PR14VncsWb"}],"urlSource":"https://projectpythia.org/cmip6-cookbook/","key":"dPapV4JaMq"},{"type":"text","value":" by Ryan Abernathey, Henri Drake, Robert Ford and Max Grover","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Mt6BjFxhC9"}],"key":"CFM0JG7PNt"}],"key":"dYm37ZsxZZ"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Coupled Model Intercomparison Project 6 was accessed from ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Ah8vXuDjuk"},{"type":"link","url":"https://registry.opendata.aws/cmip6","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"https://​registry​.opendata​.aws​/cmip6","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"G95AUqAG38"}],"urlSource":"https://registry.opendata.aws/cmip6","key":"zrWQL5e97r"},{"type":"text","value":" using a modified intake-ESM catalog hosted on NCAR’s GDEX","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Be1eL7M9A4"}],"key":"Z7jmE417xs"}],"key":"jN5HygAOSj"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We thank the UK Met Office Hadley Center for providing the observational data","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"V0h1P0a68f"}],"key":"UJHotcwVxj"}],"key":"PQkoEzw4G7"}],"key":"YSlRqBtHX8"}],"key":"q7h430Cq8l"}],"key":"aHWlhJzjoT"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Calculate Surface Ocean Heat using CESM2 LENS data","url":"/notebooks/cesm2-oceanheat","group":"NCAR examples"},"next":{"title":"Exploring Salinity Patterns in South Florida Coastal Waters","url":"/notebooks/envistor-foundations","group":"Envistor examples"}}},"domain":"http://localhost:3000"}