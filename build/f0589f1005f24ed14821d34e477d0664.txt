[31m---------------------------------------------------------------------------[39m
[31mException[39m                                 Traceback (most recent call last)
[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/intake_esm/source.py:244[39m, in [36mESMDataSource._open_dataset[39m[34m(self)[39m
[32m    223[39m datasets = [
[32m    224[39m     _open_dataset(
[32m    225[39m         record[[38;5;28mself[39m.path_column_name],
[32m   (...)[39m[32m    241[39m     [38;5;28;01mfor[39;00m _, record [38;5;129;01min[39;00m [38;5;28mself[39m.df.iterrows()
[32m    242[39m ]
[32m--> [39m[32m244[39m datasets = [43mdask[49m[43m.[49m[43mcompute[49m[43m([49m[43m*[49m[43mdatasets[49m[43m)[49m
[32m    245[39m [38;5;28;01mif[39;00m [38;5;28mlen[39m(datasets) == [32m1[39m:

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/dask/base.py:681[39m, in [36mcompute[39m[34m(traverse, optimize_graph, scheduler, get, *args, **kwargs)[39m
[32m    679[39m     keys = [38;5;28mlist[39m(flatten(expr.__dask_keys__()))
[32m--> [39m[32m681[39m     results = [43mschedule[49m[43m([49m[43mexpr[49m[43m,[49m[43m [49m[43mkeys[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m    683[39m [38;5;28;01mreturn[39;00m repack(results)

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/intake_esm/source.py:77[39m, in [36m_open_dataset[39m[34m()[39m
[32m     76[39m [38;5;28;01melse[39;00m:
[32m---> [39m[32m77[39m     ds = xr.open_dataset(url, **xarray_open_kwargs)
[32m     78[39m     [38;5;28;01mif[39;00m preprocess [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/api.py:766[39m, in [36mopen_dataset[39m[34m()[39m
[32m    760[39m backend_ds = backend.open_dataset(
[32m    761[39m     filename_or_obj,
[32m    762[39m     drop_variables=drop_variables,
[32m    763[39m     **decoders,
[32m    764[39m     **kwargs,
[32m    765[39m )
[32m--> [39m[32m766[39m ds = _dataset_from_backend_dataset(
[32m    767[39m     backend_ds,
[32m    768[39m     filename_or_obj,
[32m    769[39m     engine,
[32m    770[39m     chunks,
[32m    771[39m     cache,
[32m    772[39m     overwrite_encoded_chunks,
[32m    773[39m     inline_array,
[32m    774[39m     chunked_array_type,
[32m    775[39m     from_array_kwargs,
[32m    776[39m     drop_variables=drop_variables,
[32m    777[39m     create_default_indexes=create_default_indexes,
[32m    778[39m     **decoders,
[32m    779[39m     **kwargs,
[32m    780[39m )
[32m    781[39m [38;5;28;01mreturn[39;00m ds

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/api.py:455[39m, in [36m_dataset_from_backend_dataset[39m[34m()[39m
[32m    454[39m [38;5;28;01mif[39;00m create_default_indexes:
[32m--> [39m[32m455[39m     ds = _maybe_create_default_indexes(backend_ds)
[32m    456[39m [38;5;28;01melse[39;00m:

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/api.py:431[39m, in [36m_maybe_create_default_indexes[39m[34m()[39m
[32m    426[39m to_index = {
[32m    427[39m     name: coord.variable
[32m    428[39m     [38;5;28;01mfor[39;00m name, coord [38;5;129;01min[39;00m ds.coords.items()
[32m    429[39m     [38;5;28;01mif[39;00m coord.dims == (name,) [38;5;129;01mand[39;00m name [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m ds.xindexes
[32m    430[39m }
[32m--> [39m[32m431[39m [38;5;28;01mreturn[39;00m ds.assign_coords(Coordinates(to_index))

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/coordinates.py:313[39m, in [36m__init__[39m[34m()[39m
[32m    312[39m [38;5;28;01mif[39;00m var.dims == (name,) [38;5;129;01mand[39;00m indexes [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m--> [39m[32m313[39m     index, index_vars = create_default_index_implicit(var, [38;5;28mlist[39m(coords))
[32m    314[39m     default_indexes.update([38;5;28mdict[39m.fromkeys(index_vars, index))

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexes.py:1638[39m, in [36mcreate_default_index_implicit[39m[34m()[39m
[32m   1637[39m dim_var = {name: dim_variable}
[32m-> [39m[32m1638[39m index = PandasIndex.from_variables(dim_var, options={})
[32m   1639[39m index_vars = index.create_variables(dim_var)

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexes.py:720[39m, in [36mfrom_variables[39m[34m()[39m
[32m    714[39m [38;5;66;03m# TODO: (benbovy - explicit indexes): add __index__ to ExplicitlyIndexesNDArrayMixin?[39;00m
[32m    715[39m [38;5;66;03m# this could be eventually used by Variable.to_index() and would remove the need to perform[39;00m
[32m    716[39m [38;5;66;03m# the checks below.[39;00m
[32m    717[39m 
[32m    718[39m [38;5;66;03m# preserve wrapped pd.Index (if any)[39;00m
[32m    719[39m [38;5;66;03m# accessing `.data` can load data from disk, so we only access if needed[39;00m
[32m--> [39m[32m720[39m data = var._data [38;5;28;01mif[39;00m [38;5;28misinstance[39m(var._data, PandasIndexingAdapter) [38;5;28;01melse[39;00m var.data  [38;5;66;03m# type: ignore[redundant-expr][39;00m
[32m    721[39m [38;5;66;03m# multi-index level variable: get level index[39;00m

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/variable.py:456[39m, in [36mdata[39m[34m()[39m
[32m    455[39m [38;5;28;01melif[39;00m [38;5;28misinstance[39m([38;5;28mself[39m._data, indexing.ExplicitlyIndexed):
[32m--> [39m[32m456[39m     duck_array = [38;5;28mself[39m._data.get_duck_array()
[32m    457[39m [38;5;28;01melif[39;00m is_duck_array([38;5;28mself[39m._data):

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexing.py:897[39m, in [36mget_duck_array[39m[34m()[39m
[32m    896[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mget_duck_array[39m([38;5;28mself[39m):
[32m--> [39m[32m897[39m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m.array.get_duck_array()

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexing.py:737[39m, in [36mget_duck_array[39m[34m()[39m
[32m    736[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m([38;5;28mself[39m.array, BackendArray):
[32m--> [39m[32m737[39m     array = [38;5;28mself[39m.array[[38;5;28mself[39m.key]
[32m    738[39m [38;5;28;01melse[39;00m:

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/zarr.py:262[39m, in [36m__getitem__[39m[34m()[39m
[32m    261[39m     method = [38;5;28mself[39m._oindex
[32m--> [39m[32m262[39m [38;5;28;01mreturn[39;00m indexing.explicit_indexing_adapter(
[32m    263[39m     key, array.shape, indexing.IndexingSupport.VECTORIZED, method
[32m    264[39m )

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/core/indexing.py:1129[39m, in [36mexplicit_indexing_adapter[39m[34m()[39m
[32m   1128[39m raw_key, numpy_indices = decompose_indexer(key, shape, indexing_support)
[32m-> [39m[32m1129[39m result = raw_indexing_method(raw_key.tuple)
[32m   1130[39m [38;5;28;01mif[39;00m numpy_indices.tuple:
[32m   1131[39m     [38;5;66;03m# index the loaded duck array[39;00m

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/xarray/backends/zarr.py:225[39m, in [36m_getitem[39m[34m()[39m
[32m    224[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_getitem[39m([38;5;28mself[39m, key):
[32m--> [39m[32m225[39m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m._array[key]

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py:800[39m, in [36m__getitem__[39m[34m()[39m
[32m    799[39m [38;5;28;01melse[39;00m:
[32m--> [39m[32m800[39m     result = [38;5;28mself[39m.get_basic_selection(pure_selection, fields=fields)
[32m    801[39m [38;5;28;01mreturn[39;00m result

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py:926[39m, in [36mget_basic_selection[39m[34m()[39m
[32m    925[39m [38;5;28;01melse[39;00m:
[32m--> [39m[32m926[39m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m._get_basic_selection_nd(selection=selection, out=out, fields=fields)

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py:968[39m, in [36m_get_basic_selection_nd[39m[34m()[39m
[32m    966[39m indexer = BasicIndexer(selection, [38;5;28mself[39m)
[32m--> [39m[32m968[39m [38;5;28;01mreturn[39;00m [38;5;28mself[39m._get_selection(indexer=indexer, out=out, fields=fields)

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py:1343[39m, in [36m_get_selection[39m[34m()[39m
[32m   1342[39m     lchunk_coords, lchunk_selection, lout_selection = [38;5;28mzip[39m(*indexer)
[32m-> [39m[32m1343[39m     [38;5;28mself[39m._chunk_getitems(
[32m   1344[39m         lchunk_coords,
[32m   1345[39m         lchunk_selection,
[32m   1346[39m         out,
[32m   1347[39m         lout_selection,
[32m   1348[39m         drop_axes=indexer.drop_axes,
[32m   1349[39m         fields=fields,
[32m   1350[39m     )
[32m   1351[39m [38;5;28;01mif[39;00m out.shape:

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/core.py:2179[39m, in [36m_chunk_getitems[39m[34m()[39m
[32m   2178[39m         contexts = ConstantMap(ckeys, constant=Context(meta_array=[38;5;28mself[39m._meta_array))
[32m-> [39m[32m2179[39m     cdatas = [38;5;28mself[39m.chunk_store.getitems(ckeys, contexts=contexts)
[32m   2181[39m [38;5;28;01mfor[39;00m ckey, chunk_select, out_select [38;5;129;01min[39;00m [38;5;28mzip[39m(ckeys, lchunk_selection, lout_selection):

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/zarr/storage.py:1435[39m, in [36mgetitems[39m[34m()[39m
[32m   1433[39m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(v, [38;5;167;01mException[39;00m):
[32m   1434[39m     [38;5;66;03m# Raise any other exception[39;00m
[32m-> [39m[32m1435[39m     [38;5;28;01mraise[39;00m v
[32m   1436[39m [38;5;28;01melse[39;00m:
[32m   1437[39m     [38;5;66;03m# The function calling this method may not recognize the transformed[39;00m
[32m   1438[39m     [38;5;66;03m# keys, so we send the values returned by self.map.getitems back into[39;00m
[32m   1439[39m     [38;5;66;03m# the original key space.[39;00m

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/asyn.py:244[39m, in [36m_run_coro[39m[34m()[39m
[32m    243[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m244[39m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m asyncio.wait_for(coro, timeout=timeout), i
[32m    245[39m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m e:

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/asyncio/tasks.py:520[39m, in [36mwait_for[39m[34m()[39m
[32m    519[39m [38;5;28;01masync[39;00m [38;5;28;01mwith[39;00m timeouts.timeout(timeout):
[32m--> [39m[32m520[39m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m fut

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/implementations/http.py:246[39m, in [36m_cat_file[39m[34m()[39m
[32m    245[39m     out = [38;5;28;01mawait[39;00m r.read()
[32m--> [39m[32m246[39m     [38;5;28mself[39m._raise_not_found_for_status(r, url)
[32m    247[39m [38;5;28;01mreturn[39;00m out

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/fsspec/implementations/http.py:229[39m, in [36m_raise_not_found_for_status[39m[34m()[39m
[32m    228[39m     [38;5;28;01mraise[39;00m [38;5;167;01mFileNotFoundError[39;00m(url)
[32m--> [39m[32m229[39m response.raise_for_status()

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/aiohttp/client_reqrep.py:629[39m, in [36mraise_for_status[39m[34m()[39m
[32m    627[39m     [38;5;28mself[39m.release()
[32m--> [39m[32m629[39m [38;5;28;01mraise[39;00m ClientResponseError(
[32m    630[39m     [38;5;28mself[39m.request_info,
[32m    631[39m     [38;5;28mself[39m.history,
[32m    632[39m     status=[38;5;28mself[39m.status,
[32m    633[39m     message=[38;5;28mself[39m.reason,
[32m    634[39m     headers=[38;5;28mself[39m.headers,
[32m    635[39m )

[31mException[39m: ClientResponseError(RequestInfo(url=URL('https://osdf-uw-cache.svc.osg-htc.org:8443/ncar-gdex/d010092/ocn/monthly/cesm2LE-ssp370-smbb-TEMP.zarr/member_id/0'), method='GET', headers=<CIMultiDictProxy('Host': 'osdf-uw-cache.svc.osg-htc.org:8443', 'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate, br', 'User-Agent': 'Python/3.12 aiohttp/3.12.15')>, real_url=URL('https://osdf-uw-cache.svc.osg-htc.org:8443/ncar-gdex/d010092/ocn/monthly/cesm2LE-ssp370-smbb-TEMP.zarr/member_id/0')), (<ClientResponse(https://osdf-data.gdex.ucar.edu/ncar-gdex/d010092/ocn/monthly/cesm2LE-ssp370-smbb-TEMP.zarr/member_id/0) [301 Moved Permanently]>
<CIMultiDictProxy('Server': 'nginx/1.27.0', 'Date': 'Sat, 04 Oct 2025 01:26:13 GMT', 'Content-Type': 'text/html', 'Content-Length': '169', 'Connection': 'keep-alive', 'Location': 'https://osdf-director.osg-htc.org:443/ncar-gdex/d010092/ocn/monthly/cesm2LE-ssp370-smbb-TEMP.zarr/member_id/0')>
, <ClientResponse(https://osdf-director.osg-htc.org/ncar-gdex/d010092/ocn/monthly/cesm2LE-ssp370-smbb-TEMP.zarr/member_id/0) [307 Temporary Redirect]>
<CIMultiDictProxy('Access-Control-Allow-Headers': 'Content-Type, Authorization, Depth', 'Access-Control-Allow-Methods': 'GET, POST, PROPFIND, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'Content-Type, Authorization, X-Pelican-User, X-Pelican-Timeout, X-Pelican-Token-Generation, X-Pelican-Authorization, X-Pelican-Namespace', 'Content-Length': '150', 'Content-Type': 'text/html; charset=utf-8', 'Date': 'Sat, 04 Oct 2025 01:26:13 GMT', 'Link': '<https://osdf-uw-cache.svc.osg-htc.org:8443/ncar-gdex/d010092/ocn/monthly/cesm2LE-ssp370-smbb-TEMP.zarr/member_id/0>; rel="duplicate"; pri=1; depth=6, <https://sdsc-cache.nationalresearchplatform.org:8443/ncar-gdex/d010092/ocn/monthly/cesm2LE-ssp370-smbb-TEMP.zarr/member_id/0>; rel="duplicate"; pri=2; depth=6, <https://unl-cache.nationalresearchplatform.org:8443/ncar-gdex/d010092/ocn/monthly/cesm2LE-ssp370-smbb-TEMP.zarr/member_id/0>; rel="duplicate"; pri=3; depth=6, <https://dtn-pas.cinc.nrp.internet2.edu:8443/ncar-gdex/d010092/ocn/monthly/cesm2LE-ssp370-smbb-TEMP.zarr/member_id/0>; rel="duplicate"; pri=4; depth=6, <https://mghpcc-cache.nationalresearchplatform.org:8443/ncar-gdex/d010092/ocn/monthly/cesm2LE-ssp370-smbb-TEMP.zarr/member_id/0>; rel="duplicate"; pri=5; depth=6, <https://dtn-pas.denv.nrp.internet2.edu:8443/ncar-gdex/d010092/ocn/monthly/cesm2LE-ssp370-smbb-TEMP.zarr/member_id/0>; rel="duplicate"; pri=6; depth=6', 'Location': 'https://osdf-uw-cache.svc.osg-htc.org:8443/ncar-gdex/d010092/ocn/monthly/cesm2LE-ssp370-smbb-TEMP.zarr/member_id/0', 'Server': 'pelican/7.20.1', 'X-Pelican-Authorization': 'issuer=https://ncar-s3-origin.nationalresearchplatform.org:8000', 'X-Pelican-Jobid': '416391e0-2fee-4c4f-b6a0-91efbf75762d', 'X-Pelican-Namespace': 'namespace=/ncar-gdex, require-token=false, collections-url=https://ncar-s3-origin.nationalresearchplatform.org:8444', 'X-Pelican-Token-Generation': 'issuer=https://ncar-s3-origin.nationalresearchplatform.org:8000, max-scope-depth=3, strategy=OAuth2, base-path=/ncar-gdex')>
), status=504, message='Gateway Timeout', headers=<CIMultiDictProxy('Connection': 'Close', 'Server': 'XrootD/v5.8.4', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': 'Authorization,Want-Digest,Content-Type,User-Agent', 'Content-Disposition': 'attachment', 'Content-Length': '103')>)

The above exception was the direct cause of the following exception:

[31mESMDataSourceError[39m                        Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[9][39m[32m, line 1[39m
[32m----> [39m[32m1[39m dsets_cesm = [43mcesm_temp[49m[43m.[49m[43mto_dataset_dict[49m[43m([49m[43m)[49m

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/pydantic/_internal/_validate_call.py:39[39m, in [36mupdate_wrapper_attributes.<locals>.wrapper_function[39m[34m(*args, **kwargs)[39m
[32m     37[39m [38;5;129m@functools[39m.wraps(wrapped)
[32m     38[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mwrapper_function[39m(*args, **kwargs):
[32m---> [39m[32m39[39m     [38;5;28;01mreturn[39;00m [43mwrapper[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/pydantic/_internal/_validate_call.py:136[39m, in [36mValidateCallWrapper.__call__[39m[34m(self, *args, **kwargs)[39m
[32m    133[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m.__pydantic_complete__:
[32m    134[39m     [38;5;28mself[39m._create_validators()
[32m--> [39m[32m136[39m res = [38;5;28;43mself[39;49m[43m.[49m[43m__pydantic_validator__[49m[43m.[49m[43mvalidate_python[49m[43m([49m[43mpydantic_core[49m[43m.[49m[43mArgsKwargs[49m[43m([49m[43margs[49m[43m,[49m[43m [49m[43mkwargs[49m[43m)[49m[43m)[49m
[32m    137[39m [38;5;28;01mif[39;00m [38;5;28mself[39m.__return_pydantic_validator__:
[32m    138[39m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m.__return_pydantic_validator__(res)

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/intake_esm/core.py:686[39m, in [36mesm_datastore.to_dataset_dict[39m[34m(self, xarray_open_kwargs, xarray_combine_by_coords_kwargs, preprocess, storage_options, progressbar, aggregate, skip_on_error, **kwargs)[39m
[32m    684[39m         [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m exc:
[32m    685[39m             [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m skip_on_error:
[32m--> [39m[32m686[39m                 [38;5;28;01mraise[39;00m exc
[32m    687[39m [38;5;28mself[39m.datasets = [38;5;28mself[39m._create_derived_variables(datasets, skip_on_error)
[32m    688[39m [38;5;28;01mreturn[39;00m [38;5;28mself[39m.datasets

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/intake_esm/core.py:682[39m, in [36mesm_datastore.to_dataset_dict[39m[34m(self, xarray_open_kwargs, xarray_combine_by_coords_kwargs, preprocess, storage_options, progressbar, aggregate, skip_on_error, **kwargs)[39m
[32m    680[39m [38;5;28;01mfor[39;00m task [38;5;129;01min[39;00m gen:
[32m    681[39m     [38;5;28;01mtry[39;00m:
[32m--> [39m[32m682[39m         key, ds = [43mtask[49m[43m.[49m[43mresult[49m[43m([49m[43m)[49m
[32m    683[39m         datasets[key] = ds
[32m    684[39m     [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m exc:

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/concurrent/futures/_base.py:449[39m, in [36mFuture.result[39m[34m(self, timeout)[39m
[32m    447[39m     [38;5;28;01mraise[39;00m CancelledError()
[32m    448[39m [38;5;28;01melif[39;00m [38;5;28mself[39m._state == FINISHED:
[32m--> [39m[32m449[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m__get_result[49m[43m([49m[43m)[49m
[32m    451[39m [38;5;28mself[39m._condition.wait(timeout)
[32m    453[39m [38;5;28;01mif[39;00m [38;5;28mself[39m._state [38;5;129;01min[39;00m [CANCELLED, CANCELLED_AND_NOTIFIED]:

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/concurrent/futures/_base.py:401[39m, in [36mFuture.__get_result[39m[34m(self)[39m
[32m    399[39m [38;5;28;01mif[39;00m [38;5;28mself[39m._exception:
[32m    400[39m     [38;5;28;01mtry[39;00m:
[32m--> [39m[32m401[39m         [38;5;28;01mraise[39;00m [38;5;28mself[39m._exception
[32m    402[39m     [38;5;28;01mfinally[39;00m:
[32m    403[39m         [38;5;66;03m# Break a reference cycle with the exception in self._exception[39;00m
[32m    404[39m         [38;5;28mself[39m = [38;5;28;01mNone[39;00m

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/concurrent/futures/thread.py:59[39m, in [36m_WorkItem.run[39m[34m(self)[39m
[32m     56[39m     [38;5;28;01mreturn[39;00m
[32m     58[39m [38;5;28;01mtry[39;00m:
[32m---> [39m[32m59[39m     result = [38;5;28;43mself[39;49m[43m.[49m[43mfn[49m[43m([49m[43m*[49m[38;5;28;43mself[39;49m[43m.[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[38;5;28;43mself[39;49m[43m.[49m[43mkwargs[49m[43m)[49m
[32m     60[39m [38;5;28;01mexcept[39;00m [38;5;167;01mBaseException[39;00m [38;5;28;01mas[39;00m exc:
[32m     61[39m     [38;5;28mself[39m.future.set_exception(exc)

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/intake_esm/core.py:833[39m, in [36m_load_source[39m[34m(key, source)[39m
[32m    832[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_load_source[39m(key, source):
[32m--> [39m[32m833[39m     [38;5;28;01mreturn[39;00m key, [43msource[49m[43m.[49m[43mto_dask[49m[43m([49m[43m)[49m

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/intake_esm/source.py:272[39m, in [36mESMDataSource.to_dask[39m[34m(self)[39m
[32m    270[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mto_dask[39m([38;5;28mself[39m):
[32m    271[39m [38;5;250m    [39m[33;03m"""Return xarray object (which will have chunks)"""[39;00m
[32m--> [39m[32m272[39m     [38;5;28;43mself[39;49m[43m.[49m[43m_load_metadata[49m[43m([49m[43m)[49m
[32m    273[39m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m._ds

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/intake/source/base.py:283[39m, in [36mDataSourceBase._load_metadata[39m[34m(self)[39m
[32m    281[39m [38;5;250m[39m[33;03m"""load metadata only if needed"""[39;00m
[32m    282[39m [38;5;28;01mif[39;00m [38;5;28mself[39m._schema [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m--> [39m[32m283[39m     [38;5;28mself[39m._schema = [38;5;28;43mself[39;49m[43m.[49m[43m_get_schema[49m[43m([49m[43m)[49m
[32m    284[39m     [38;5;28mself[39m.dtype = [38;5;28mself[39m._schema.dtype
[32m    285[39m     [38;5;28mself[39m.shape = [38;5;28mself[39m._schema.shape

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/intake_esm/source.py:208[39m, in [36mESMDataSource._get_schema[39m[34m(self)[39m
[32m    206[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_get_schema[39m([38;5;28mself[39m) -> Schema:
[32m    207[39m     [38;5;28;01mif[39;00m [38;5;28mself[39m._ds [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m--> [39m[32m208[39m         [38;5;28;43mself[39;49m[43m.[49m[43m_open_dataset[49m[43m([49m[43m)[49m
[32m    209[39m         metadata: [38;5;28mdict[39m[[38;5;28mstr[39m, typing.Any] = {[33m'[39m[33mdims[39m[33m'[39m: {}, [33m'[39m[33mdata_vars[39m[33m'[39m: {}, [33m'[39m[33mcoords[39m[33m'[39m: ()}
[32m    210[39m         [38;5;28mself[39m._schema = Schema(
[32m    211[39m             datashape=[38;5;28;01mNone[39;00m,
[32m    212[39m             dtype=[38;5;28;01mNone[39;00m,
[32m   (...)[39m[32m    215[39m             extra_metadata=metadata,
[32m    216[39m         )

[36mFile [39m[32m~/micromamba/envs/osdf-cookbook/lib/python3.12/site-packages/intake_esm/source.py:264[39m, in [36mESMDataSource._open_dataset[39m[34m(self)[39m
[32m    261[39m     [38;5;28mself[39m._ds.attrs[OPTIONS[[33m'[39m[33mdataset_key[39m[33m'[39m]] = [38;5;28mself[39m.key
[32m    263[39m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m exc:
[32m--> [39m[32m264[39m     [38;5;28;01mraise[39;00m ESMDataSourceError(
[32m    265[39m         [33mf[39m[33m"""[39m[33mFailed to load dataset with key=[39m[33m'[39m[38;5;132;01m{[39;00m[38;5;28mself[39m.key[38;5;132;01m}[39;00m[33m'[39m
[32m    266[39m [33m         You can use `cat[[39m[33m'[39m[38;5;132;01m{[39;00m[38;5;28mself[39m.key[38;5;132;01m}[39;00m[33m'[39m[33m].df` to inspect the assets/files for this key.[39m
[32m    267[39m [33m         [39m[33m"""[39m
[32m    268[39m     ) [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mexc[39;00m

[31mESMDataSourceError[39m: Failed to load dataset with key='ocn.ssp370.monthly.smbb'
                 You can use `cat['ocn.ssp370.monthly.smbb'].df` to inspect the assets/files for this key.
                 